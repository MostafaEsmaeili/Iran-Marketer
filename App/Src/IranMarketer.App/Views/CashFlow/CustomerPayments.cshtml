@Html.Partial("_RegisterLastVersionOfKendo")
@using Kendo.Mvc.UI
@using Pikad.Framework.Infra.Utility
@using IranMarketer.Domain.DTO


@{
    ViewBag.Title = "پرداخت به سرمایه گذاران";
}

<div id="filterPanel" class="panel panel-flat">
    <div class="panel-heading">
        <h5 class="panel-title">پرداخت به سرمایه گذاران</h5>
        <div class="heading-elements">
            <ul class="icons-list">
                <li><a data-action="collapse"></a></li>

            </ul>
        </div>
    </div>
    <div class="panel-body">
        <div class="tabbable">
            <ul class="nav nav-tabs nav-tabs-highlight nav-justified">

                <li class="active"><a href="#highlighted-justified-tab1" data-toggle="tab" class="legitRipple" aria-expanded="true">فیلتر گزارش</a></li>
                <li class=""><a href="#highlighted-justified-tab2" data-toggle="tab" class="legitRipple" aria-expanded="false">عملیات پرداخت</a></li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="highlighted-justified-tab1">
                    <div class="k-rtl">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>نوع پرداختی</label>
                                    @(Html.Kendo().DropDownList().Name("PaymentTypes").HtmlAttributes(new { @class = "form-control k-rtl", style = "width:250px;", })
                                      .DataTextField("Title")
                                      .Filter(FilterType.Contains)
                                      .DataValueField("Type")
                                      .SelectedIndex(0)
                                      .Events(x =>
                                      {
                                          //x.Change("onPaymentTypesChange");
                                          //x.DataBound("onfiscalYearChange");

                                      })
                                      .AutoBind(true)
                                      .DataSource(source => source.Read(read => read.Action("GetCustomerPaymentTypes", "UIComponent")).ServerFiltering(false)))

                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>نوع مشتری</label>
                                    @(Html.Kendo().ComboBox().Name("PartyType").HtmlAttributes(new { @class = "form-control k-rtl" })
                                      .DataTextField("PartyTypeTitle")
                                      .Filter(FilterType.Contains)
                                      .DataValueField("PartyTypeValue")
                                      .AutoBind(true)
                                      .DataSource(source => source.Read(read => read.Action("GetPartyType", "UIComponent", new { addAll = true })).ServerFiltering(false)))
                                </div>

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>تا تاریخ</label>
                                    @Html.Kendo().DatePicker().Name("Date").Value(DateTime.Now.ConvertMiladiToJalali()).HtmlAttributes(new { style = "width:250px", type = "text" }).Format("yyyy/MM/dd")

                                </div>
                            </div>
                            <div class="col-md-6">

                                <div class="form-group">
                                    <label>مشتری</label>
                                    @(Html.Kendo().AutoComplete().Name("PartyName")
                                      .DataTextField("FullName")
                                      .Filter(FilterType.Contains)
                                      .MinLength(3)
                                      .HtmlAttributes(new
                                      {
                                          style = "width:630px;",
                                          //data_required_msg = "اطلاعات مشتری الزامی است",
                                          //required = "required"
                                      })
                                      .HeaderTemplate("<div style=\"width:630px !important;\" class=\"dropdown-header\">" +
                                                      "<span style=\"width:290px;\" class=\"k-widget k-header\" >عنوان</span>" +
                                                      "<span class=\"k-widget k-header\" >کد ملی</span>" +
                                                      "<span class=\"k-widget k-header\" >نام پدر</span>" +
                                                      "</div>")
                                      .Template("<div  class=\"dropdown-header\">" +
                                                "<span style=\"width:290px;\" class=\"k-state-default\">#: data.FullName #</span>" +
                                                "<span class=\"k-state-default\">#: data.NationalId #</span>" +
                                                "<span class=\"k-state-default\">#: data.FatherName #</span>" +
                                                "</div>").HtmlAttributes(new { style = "width:630px;" })
                                      .Placeholder("جستجوی مشتری بر اساس  نام و نام خانوادگی و کد ملی")
                                      .DataSource(source =>
                                      {
                                          source
                                              .Custom()
                                              .ServerFiltering(true)
                                              .ServerPaging(true)
                                              .PageSize(100)
                                              .Type("aspnetmvc-ajax")
                                              .Transport(t =>
                                              {
                                                  t.Read(r =>
                                                  {
                                                      r.Action("GetCustomerAutoCompleteFilter", "Party");
                                                  });
                                              })

                                              .Schema(s =>
                                              {
                                                  s.Data("Data").Total("Total");
                                              });
                                          ;

                                      }).Events(e =>
                                      {
                                          e.Change("onChange").Select("onSelect").Close("onClose").Filtering("onFiltering");
                                      })
                                      .Virtual(v => v.ItemHeight(26))
                                    )
                                    <input type="hidden" id="PartyId" name="PartyId" data-bind="value: getPartyId" />

                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>مانده پرداختی: از</label>
                                    <input class="form-control" type="number" min="0" id="FromRemain" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>تا </label>
                                    <input class="form-control" type="number" min="0" id="ToRemain" />
                                </div>
                            </div>

                        </div>
                        <div class="text-right">
                            <button type="button" id="search" class="btn btn-primary">جست و جو <i class="icon-arrow-left13 position-right"></i></button>
                        </div>
                    </div>
                </div>
                <div class="tab-pane" id="highlighted-justified-tab2">
                    <div class="k-rtl">
                        <form role="form" id="customerspaymentform" novalidate class="form-horizontal form-validate-jquery" method="POST">
                            @Html.AntiForgeryToken()
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>تاریخ</label>
                                        @Html.Kendo().DatePicker().Name("PaymentDate").Value(DateTime.Now.ConvertMiladiToJalali()).HtmlAttributes(new { style = "width:250px", type = "text", required = "required", data_required_msg = "تاریخ پرداخت الزامی است" }).Format("yyyy/MM/dd")
                                        <span class="text-danger">*</span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>جمع مبلغ پرداختی</label>
                                        <input type="text" class="form-control" onkeyup="SetMoney(event, this)" id="totalpaymentamount" required="required" data_required_msg="مبلغ پرداخت صدو الزامی است" />
                                        <span class="text-danger">*</span>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>برداشت از</label>

                                        @(Html.Kendo().ComboBox().Name("BankDepositId")

                                          .DataTextField("FullBankName").Placeholder("انتخاب حساب محل برداشت")
                                          .DataValueField("Id")
                                          .HtmlAttributes(new
                                          {
                                              style = "width:400px;margin-right: 1px;",
                                              data_required_msg = "انتخاب حساب محل برداشت الزامی است",
                                              required = "required"
                                          })

                                          .Filter("contains")
                                          .AutoBind(true)
                                          .MinLength(3)
                                          .DataSource(
                                              source => source.Read(read => read.Action("GetActiveBankDepositsForReqeust", "BankDeposit")
                                                  ).ServerFiltering(false))
                                        )
                                        <span class="text-danger">*</span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>شماره چک</label>
                                        <input type="text" class="form-control" id="ChequeNumber" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>سررسید چک</label>
                                        @Html.Kendo().DatePicker().Name("DueDate").Value(DateTime.Now.ConvertMiladiToJalali()).HtmlAttributes(new { style = "width:250px", type = "text" }).Format("yyyy/MM/dd")
                                    </div>
                                </div>
                            </div>
                            <div class="text-right">
                                <button type="button" id="payment" class="btn btn-primary">پرداخت<i class="icon-arrow-left13 position-right"></i></button>
                            </div>
                        </form>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div class="panel panel-body">
        <div class="k-rtl">
            @(Html.Kendo().Grid<CustomerPayment>()
              .Name("grid")
              .Columns(column =>
              {
                  //column.Bound(x => x.AccountBookRow.Row).Title("ردیف").Width(70);
                  column.Bound(x => x.FullName).Title("مشتری").Width(110);
                  column.Bound(x => x.NationalId).Title("کد ملی").Width(100);
                  column.Bound(x => x.AccountNumber).Title("شماره حساب").Width(120);
                  column.Bound(x => x.BankTitle).Title("بانک").Width(110);
                  column.Bound(x => x.IBAN).Title("شبا").Width(135);
                  column.Bound(x => x.DetailLedgerCode).Title("کد تفصیلی").Width(80);
                  column.Bound(x => x.CustomerPaymentTypeTitle).Title("بابت").Width(100);
                  column.Bound(x => x.PartyTypeTitle).Title("نوع مشتری").Width(80);
                  column.Bound(x => x.Remain).Title("مانده").Width(110).Format("{0:n0}");
                  column.Template(@<text></text>).ClientTemplate("<input type='checkbox' id='${SelectItem}' class='k-checkbox row-checkbox'><label class='k-checkbox-label' for='${SelectItem}'></label>")
                      .HeaderTemplate("<input type='checkbox' id='header-chb' class='k-checkbox header-checkbox'><label class='k-checkbox-label' for='header-chb'>انتخاب همه</label>").Width(70);
              })
              .Excel(excel => excel
                  .FileName("CustomerPayment.xlsx")
                  .Filterable(true)
                  .AllPages(true)
                  .ForceProxy(true)
                  .AllPages(true)
                  .ProxyURL(Url.Action("GetCustomerPayments", "CashFlow"))
              )
              .Sortable(sortable => sortable.AllowUnsort(false))

              .Pageable(pager => pager
                  .Input(true)
                  .Numeric(true)
                  .Info(true)
                  .PreviousNext(true)
                  .Refresh(true)
                  .PageSizes(new[] { 50, 100, 150, 200 }))

              .AllowCopy(true)
              .Selectable()
              .Scrollable()
              .AutoBind(false)
              .HtmlAttributes(new { style = "height:560px;" })
              .DataSource(dataSource =>
                  dataSource.Custom()
                      .Type("aspnetmvc-ajax")
                      .PageSize(100)
                      .ServerPaging(true)
                      .ServerSorting(true)
                      .ServerFiltering(true)
                      .Transport(transport => transport
                          .Read(read => read.Action("GetCustomerPayments", "CashFlow").Data("filterData").Type(HttpVerbs.Post))
                      )
                      .Schema(s => s.Data("Result").Total("TotalRecords"))
                      .PageSize(50)
                      .ServerPaging(true)
                      .ServerSorting(true)
                      .ServerFiltering(true)
              )

              .Resizable(resize => resize.Columns(true))
              .Reorderable(reorder => reorder.Columns(true)))

        </div>
    </div>
</div>

<style type="text/css">
    .form-horizontal .form-group {
        margin-right: 0 !important;
        margin-left: 0 !important;
    }

    .form-group-material > .control-label {
        opacity: 1 !important;
        filter: alpha(opacity=0);
    }


    .dropdown-header {
        /*font-size: 1.2em;*/
        padding: 0px 0px;
        text-align: right;
    }

        .dropdown-header > span {
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            text-align: right;
            display: inline-block;
            border-style: solid;
            border-width: 0 0 1px 1px;
            padding: .3em .6em;
            width: 150px;
        }

            .dropdown-header > span:first-child {
                width: 150px;
                border-left-width: 0;
            }

    .k-selectrowitemcustom {
        /*background-color: #e8f5e9;*/
        background-color: #4caf50;
    }
</style>
<script>

    function onClose() {

    }

    function onChange() {
        var dataItem = $("#PartyName").data("kendoAutoComplete").dataItem();
        var p = $('[name="PartyId"]');
        if (dataItem != null)
            $(p).val(dataItem.Id);
    }

    function onSelect(e) {

        // $("#custometfullname").text(dataItem.FullName);
    }

    function onDataBound(e) {

    }

    function onFiltering() {

    }
    var checkedIds = {};
    var sumtotalPayment = 0;


    var grid = $("#grid").kendoGrid().data("kendoGrid");
    grid.table.on("click", ".k-checkbox", selectRow);

    $('#header-chb').change(function (ev) {
        var checked = ev.target.checked;
        $('.row-checkbox').each(function (idx, item) {
            if (checked) {
                if (!($(item).closest('tr').is('.k-selectrowitemcustom'))) {
                    $(item).click();
                }
            } else {
                if ($(item).closest('tr').is('.k-selectrowitemcustom')) {
                    $(item).click();
                }
            }
        });
    });



    //$("#showSelection").bind("click", function () {
    //    var checked = [];
    //    for (var i in checkedIds) {
    //        if (checkedIds[i]) {
    //            checked.push(i);
    //        }
    //    }

    //    alert(checked);
    //});

    //on click of the checkbox:
    function selectRow() {
        var checked = this.checked,
            row = $(this).closest("tr"),
            grid = $("#grid").data("kendoGrid"),
            dataItem = grid.dataItem(row);

        var paymentval = $("#totalpaymentamount");
        $(this).attr('checked', 'checked');
        checkedIds[dataItem.SelectItem] = checked;
        if (checked) {
            sumtotalPayment += dataItem.Remain;
            $(paymentval).val(addcommas2(ConvertScientificToDecimal(sumtotalPayment)));

            //$(paymentval).val(addcommas(sumtotalPayment));
            row.addClass("k-selectrowitemcustom");
        } else {
            sumtotalPayment -= dataItem.Remain;
            $(paymentval).val(addcommas2(ConvertScientificToDecimal(sumtotalPayment)));
            //$(paymentval).val(addcommas(sumtotalPayment));
            row.removeClass("k-selectrowitemcustom");
        }
    }

    function filterData() {

        var data = {
            PartyId: $("#PartyName").data("kendoAutoComplete").dataItem() != null ? $("#PartyName").data("kendoAutoComplete").dataItem().Id : "-1",
            PartyType: $("#PartyType").data("kendoComboBox").dataItem() != null ? $("#PartyType").data("kendoComboBox").dataItem().PartyTypeValue : "-1",
            PaymentTypes: $("#PaymentTypes").data('kendoDropDownList').dataItem() != null ? $("#PaymentTypes").data('kendoDropDownList').dataItem().Type : "-1",
            Date: $("#Date").val()

        }

        return { model: data };
    }

    $("#payment").hover(function () {
        $("#customerspaymentform").valid();
    });

    $("#payment").click(function () {
        if ($("#customerspaymentform").kendoValidator().data("kendoValidator").validate() === false || $("#customerspaymentform").valid() === false) {

                alert("لطفا تمامی فیلدهای مورد نظر را پر نمایید");
                return;
        }

        var checked = [];
        for (var i in checkedIds) {
            if (checkedIds[i]) {
                checked.push(i);
            }
        }

        //$("#subscriptionrequestform").kendoValidator().data("kendoValidator").validate();

        $("#customerspaymentform").valid();
        var bankDeposit = $("#BankDepositId").data("kendoComboBox").dataItem();



        var data= {
            SelectItems: checked,
            Date: $("#PaymentDate").val(),
            DueDate :$("#DueDate").val(),
            ChequeNumber: $("#ChequeNumber").val(),
            TotalAmount: $("#totalpaymentamount").val().replace(',',''),
            BankDepositId: bankDeposit.Id
        }

        $.ajax({
            url: '@Url.Action("SaveCustomerPayments", "CashFlow")',
            type: "POST",
            dataType: "json",
            data: JSON.stringify(data),
            contentType: "application/json; charset=utf-8",
            401: function() {
                var url = '@Url.Action("Login", "Account")';
                window.location.href = url;
            },
            error: function(response) {

                showNotification(response.Message, 'e');
                $(':input', '#subscriptionrequestform')
                    .not(':button, :submit, :reset, :hidden')
                    .val('')
                    .removeAttr('checked')
                    .removeAttr('selected');
                sumtotalPayment = 0;
                checkedIds = {};
                $("#totalpaymentamount").val('');
                $("#BankDepositId").data("kendoComboBox").value('');
                $("#ChequeNumber").val('');
                $("#grid").data("kendoGrid").dataSource.read();

            },

            success: function(response) {

                if (response != null && response.BRuleCode == '1000') {
                    showNotification(response.Message, 's');
                    $(':input', '#subscriptionrequestform')
                        .not(':button, :submit, :reset, :hidden')
                        .val('')
                        .removeAttr('checked')
                        .removeAttr('selected');
                    sumtotalPayment = 0;
                    checkedIds = {};
                    $("#totalpaymentamount").val('');
                    $("#BankDepositId").data("kendoComboBox").value('');
                    $("#ChequeNumber").val('');
                    $("#grid").data("kendoGrid").dataSource.read();

                } else {
                    showNotification(response.Message, 'e');
                    $(':input', '#subscriptionrequestform')
                        .not(':button, :submit, :reset, :hidden')
                        .val('')
                        .removeAttr('checked')
                        .removeAttr('selected');
                    sumtotalPayment = 0;
                    checkedIds = {};
                    $("#totalpaymentamount").val('');
                    $("#BankDepositId").data("kendoComboBox").value('');
                    $("#ChequeNumber").val('');
                    $("#grid").data("kendoGrid").dataSource.read();
                }
            }
        });

        //$("#grid").data("kendoGrid").dataSource.read();
    });

    $("#search").click(function () {

        $("#grid").data("kendoGrid").dataSource.read();

    });
</script>
@if (@TempData["Success"] != null)
{
    <script>
        $(document).ready(function () {

            showNotification('@TempData["Success"]', 's');
        });
    </script>
}
@if (@TempData["Error"] != null)
{
    <script>

        $(document).ready(function () {
            showNotification('@TempData["Error"]', 'e');

        });
    </script>
}