@Html.Partial("_RegisterLastVersionOfKendo")
@using Kendo.Mvc.UI
@using Pikad.Framework.Infra.Utility
@using IranMarketer.App.Component

@{
    Layout = "../Shared/_Layout.cshtml";
    ViewBag.Title = "گزارش NAV صندوق";
}
<div>
    <div class="panel-heading">
        <h5 class="panel-title">گزارش NAV صندوق</h5>

    </div>
    <div id="searchBox" class="panel panel-flat">
        <div class="panel-heading">
            <h5 class="panel-title">فیلتر جستجو</h5>
            <div class="heading-elements">
                <ul class="icons-list">
                    <li><a data-action="collapse"></a></li>

                </ul>
            </div>
        </div>

        <div class="panel-body">
            <form class="form-inline">
                <div class="form-group form-group-material">
                    <label>از تاریخ</label>
                    @Html.Kendo().DatePicker().Value(DateTime.Now.AddDays(-14).ConvertMiladiToJalali()).Name("FromDate").HtmlAttributes(new { style = "width:250px", type = "text" }).Format("yyyy/MM/dd")
                    <span class="text-danger">*</span>
                </div>
                <div class="form-group form-group-material">
                    <label>تا تاریخ</label>
                    @Html.Kendo().DatePicker().Value(DateTime.Now.ConvertMiladiToJalali()).Name("ToDate").HtmlAttributes(new { style = "width:250px", type = "text" }).Format("yyyy/MM/dd")
                    <span class="text-danger">*</span>
                </div>
                <button type="button" id="search" class="btn btn-sm btn-primary">جست و جو <i class="icon-arrow-left13 position-right"></i></button>
            </form>
        </div>
    </div>

    <div class="panel panel-body">
        <div class="k-rtl">
            @(Html.Kendo().Grid<IranMarketer.App.Component.Model.NAVModel>()
              .Name("grid")
              .Columns(column =>
              {
                  column.Bound(x => x.JDate).Title("تاریخ").Width(80);
                  column.Bound(x => x.SubscriptionNAV).Title("نرخ صدور").Width(80).ClientTemplate("#= formatNumber(SubscriptionNAV) #");
                  column.Bound(x => x.RedemptionNAV).Title("نرخ ابطال").Width(80).ClientTemplate("#= formatNumber(RedemptionNAV) #");
                  column.Bound(x => x.StaticalNAV).Title("نرخ ارزش آماری").Width(80).ClientTemplate("#= formatNumber(StaticalNAV) #");
                  column.Bound(x => x.SubscriptionUnit).Title("واحدهای صادر شده روز").Width(60).ClientTemplate("#= formatNumber(SubscriptionUnit) #");
                  column.Bound(x => x.TotalSubscriptionUnit).Title("کل واحدهای صادر شده").Width(80).ClientTemplate("#= formatNumber(TotalSubscriptionUnit) #");
                  column.Bound(x => x.RedemptionUnit).Title("واحدهای ابطالی روز").Width(80).ClientTemplate("#= formatNumber(RedemptionUnit) #");
                  column.Bound(x => x.TotalRedemptionUnit).Title("کل واحدهای ابطال شده").Width(80).ClientTemplate("#= formatNumber(TotalRedemptionUnit) #");
                  column.Bound(x => x.TotalUnit).Title("کل واحدها").Width(80).ClientTemplate("#= formatNumber(TotalUnit) #");
                  column.Bound(x => x.NetAssetValue).Title("خالص ارزش دارایی").Width(80).ClientTemplate("#= formatNumber(NetAssetValue) #");
                  column.Bound(x => x.TotalRetailInvestor).Title("مشتریان حقیقی").Width(80).ClientTemplate("#= formatNumber(TotalRetailInvestor) #");
                  column.Bound(x => x.TotalInstitutionalInvestor).Title("مشتریان حقوقی").Width(80).ClientTemplate("#= formatNumber(TotalInstitutionalInvestor) #");
                  column.Bound(x => x.RetailInvestorUnitsPercent).Title("درصد مالکیت حقیقی").Width(80).ClientTemplate("#= formatPercent(RetailInvestorUnitsPercent) #");
                  column.Bound(x => x.InstitutionalInvestorUnitPercent).Title("درصد مالکیت حقوقی").Width(80).ClientTemplate("#= formatPercent(InstitutionalInvestorUnitPercent) #");
              })
              .Excel(excel => excel
                  .FileName("NavListExcelReport.xlsx")
                  .Filterable(true)
                  .AllPages(true)

                  .ForceProxy(true)

                  .AllPages(true)
                  .ProxyURL(Url.Action("NAVListExcelReport", "NAV"))
              )
              .Sortable(sortable => sortable.AllowUnsort(false))
              .ColumnMenu(e =>
              {
                  e.Columns(true);

              })
              .Pageable(pager => pager
                  .Input(true)
                  .Numeric(true)
                  .Info(true)
                  .PreviousNext(true)
                  .Refresh(true)
                  .PageSizes(new[] { 50, 100, 150, 200 }))

              .AllowCopy(true)
              .Selectable()
              .Scrollable()
              .AutoBind(false)
              .HtmlAttributes(new { style = "height:600px;" })
              .DataSource(dataSource =>
                  dataSource.Custom()
                      .Type("aspnetmvc-ajax")
                      .PageSize(100)
                      .ServerPaging(true)
                      .ServerSorting(true)
                      .ServerFiltering(true)
                      .Transport(transport => transport
                          .Read(read => read.Action("GetNavList", "NAV").Data("filterData").Type(HttpVerbs.Post))
                      )
                      .Schema(s => s.Data("Result").Total("TotalRecords"))
                      .PageSize(50)
                      .ServerPaging(true)
                      .ServerSorting(true)
                      .ServerFiltering(true)
              )

              .Resizable(resize => resize.Columns(true))
              .Reorderable(reorder => reorder.Columns(true)))

        </div>
    </div>
</div>
<style type="text/css">
    .form-horizontal .form-group {
        margin-right: 0 !important;
        margin-left: 0 !important;
    }

    .form-group-material > .control-label {
        opacity: 1 !important;
        filter: alpha(opacity=0);
    }


    .dropdown-header {
        /*font-size: 1.2em;*/
        padding: 0px 0px;
        text-align: right;
    }

        .dropdown-header > span {
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            text-align: right;
            display: inline-block;
            border-style: solid;
            border-width: 0 0 1px 1px;
            padding: .3em .6em;
            width: 150px;
        }

            .dropdown-header > span:first-child {
                width: 150px;
                border-left-width: 0;
            }

    th a {
        font-size: 8px;
        text-align: center;
    }
</style>

<script>
    $(document).ready(function () {
        $("#grid").data("kendoGrid").dataSource.read();
    });


    function onSelect(e) {

    }

    function onDataBound(e) {

    }

    function onFiltering() {

    }

    function onadditionalData1() {
        return {
            text: $('[name="BranchId_input"]').val()
        };
    }

    function formatNumber(value) {
        return kendo.toString(value, "n0");
    }

    function formatPercent(value) {
        return kendo.toString(value / 100, "p0");
    }

    function filterData() {

        var data = {

            FromDate: $("#FromDate").val(),
            ToDate: $("#ToDate").val()
        }

        return { model: data };
    }
    $("#search").click(function () {

        $("#grid").data("kendoGrid").dataSource.read();
        $("#searchBox li:first-child a").click();
    });

</script>