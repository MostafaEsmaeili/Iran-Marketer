@using PersonalityRole = IranMarketer.Domain.Enum.PersonalityRole
@using Kendo.Mvc.UI
@using IranMarketer.Common.Utility
@using IranMarketer.Domain.Entity,
@model ManagementSetting

<form id="managementSettingForm">

    <div class="panel panel-flat">

        <div class="panel-body" style="display: block;">
            <fieldset id="fielsSet">

                <div class="form-group">
                    <label>مدیر صندوق</label>

                    @(Html.Kendo().ComboBox()
                      .Name("FundManager")
                      .DataValueField("NationalId")
                      .DataTextField("FullName")
                      .HtmlAttributes(new
                      {
                          style = "width:400px;margin-right: 1px;",
                          data_required_msg = " الزامی است",
                          required = "required"
                      })

                      //.MaxSelectedItems(1)
                      .Filter("contains")
                      .MinLength(3)
                      .DataSource(
                          source => source.Read(read => read.Action("GetPartyByFilter", "Party", new { roleId = (int)PersonalityRole.Manager })

                              ).ServerFiltering(true))
                      .Enable(true))

                </div>
                <div class="form-group">
                    <label>مدیر اجرا</label>

                    @(Html.Kendo().ComboBox()
                      .Name("OperatinalAdministrator")
                      .DataValueField("NationalId")
                      .DataTextField("FullName")
                      .HtmlAttributes(new
                      {
                          style = "width:400px;margin-right: 1px;",

                      })
                      .Filter("contains")
                      .MinLength(3)
                      //.MaxSelectedItems(1)
                      .DataSource(
                          source => source.Read(read => read.Action("GetPartyByFilter", "Party", new { roleId = (int)PersonalityRole.Manager })

                              ).ServerFiltering(true))
                      .Enable(true))

                </div>

                <div class="form-group ">
                    <label>حداقل تعداد واحد مدیر</label>
                    <input type="number" min="0" class="form-control" placeholder="حداقل تعداد واحد مدیر" name="MinManagerUnit" data-bind="value: MinManagerUnit">
                </div>
                <div class="form-group">
                    <label>حداکثر تعداد واحد مدیر</label>
                    <input type="number" min="0" class="form-control" placeholder="حداکثر تعداد واحد مدیر" name="MaxManagerUnit" data-bind="value: MaxManagerUnit">
                </div>


                <div class="form-group">
                    <label>درصد کارمزد مدیر از محل سهام و حق تقدم</label>
                    <input type="number" min="0" class="form-control" placeholder="درصد کارمزد مدیر از محل سهام و حق تقدم" name="PercentageFromEquity" data-bind="value: PercentageFromEquity">
                </div>
                <div class="form-group">
                    <label>درصد کارمزد مدیر از محل اوراق بادرآمد ثابت</label>
                    <input type="number" min="0" class="form-control" placeholder="درصد کارمزد مدیر از محل اوراق بادرآمد ثابت" name="PercentageFromBond" data-bind="value: PercentageFromBond">
                </div>
                <div class="form-group">
                    <label>درصد کارمزد مدیر از محل اوراق گواهی سپرده</label>
                    <input type="number" min="0" class="form-control" placeholder="درصد کارمزد مدیر از محل اوراق گواهی سپرده" name="PercentageFromCoupon" data-bind="value: PercentageFromCoupon">
                </div>
                <div class="form-group">
                    <label>درصد کارمزد مدیر از محل مابه التفاوت سود بانکی</label>
                    <input type="number" min="0" class="form-control" placeholder="درصد کارمزد مدیر از محل مابه التفاوت سود بانکی" name="DiffPercentFromBankDeposit" data-bind="value: DiffPercentFromBankDeposit">
                </div>
                <div class="form-group">
                    <label>درصد کارمزد مدیر بر مبنای خالص ارزش دارایی ها</label>
                    <input type="number" min="0" class="form-control" placeholder="درصد کارمزد مدیر بر مبنای خالص ارزش دارایی ها" name="PercentageFromNetAssetValue" data-bind="value: PercentageFromNetAssetValue" value="@Model.MaxManagerUnit">
                </div>
                <div class="form-group">
                    <label>نرخ ثابت سالیانه</label>
                    <input type="number" min="0" class="form-control" placeholder="نرخ ثابت سالیانه" name="YearlyFixedRate" data-bind="value: YearlyFixedRate">
                </div>

                <div class="form-group">
                    <label>در نظر گرفتن مالیات و عوارض برای مدیر</label>
                    <input type="checkbox" name="ManagementSettingConsiderTaxAndToll">
                </div>

                <div class="form-group">
                    <label>در نظر گرفتن مالیات و عوارض برای مدیر از محل مابه التفاوت سود بانکی</label>
                    <input type="checkbox" name="ConsiderTaxAndTollFromDiffOfBankDeposit">
                </div>

            </fieldset>
            <div class="text-right">
                <button id="AddManagementSetting" type="button" class="btn btn-primary legitRipple">ذخیره<i class="icon-arrow-left13 position-right"></i></button>
            </div>
        </div>
    </div>
</form>
<div class="panel panel-flat panel-collapsed">
    <div class="panel-heading">
        <h5 class="panel-title">تاریخچه تنظیمات<a class="heading-elements-toggle"><i class="icon-more"></i></a></h5>
        <div class="heading-elements">
            <ul class="icons-list">
                <li><a data-action="collapse"></a></li>
                <li><a data-action="reload"></a></li>
                <li><a data-action="close"></a></li>
            </ul>
        </div>
    </div>
    <div class="panel-body">
        <div class="k-rtl">
            @(Html.Kendo().Grid<ManagementSetting>()
                  .Name("grid")
                  .Columns(column =>
                  {

                      column.Bound(x => x.FundManager.FullName).Title("مدیر صندوق");
                      column.Bound(x => x.OperatinalAdministrator.FullName).Title("مدیر اجرا");
                      column.Bound(x => x.ValidFromJalali).Title("تاریخ");


                      column.Command(command => command.Custom("ویرایش").Click("showDetails")).Width(180);


                  })
                  .Selectable(x =>
                  {
                      x.Enabled(true).Mode(GridSelectionMode.Single).Type(GridSelectionType.Row);
                  }).Events(c => c.Change("GridonChenge"))

                  .Excel(excel => excel
                      .FileName("managementSetting.xlsx")
                      .Filterable(true)
                      .AllPages(true)

                      .ForceProxy(true)

                      .AllPages(true)
                      .ProxyURL(Url.Action("CustomExcelReport", "ExpenseSetting"))
                  )
                  .Sortable(sortable => sortable.AllowUnsort(false))

                  .Pageable(pager => pager
                      .Input(true)
                      .Numeric(true)
                      .Info(true)
                      .PreviousNext(true)
                      .Refresh(true)
                      .PageSizes(new[] { 10, 20, 50, 100 }))
                  .ToolBar(toolbar =>
                  {
                      toolbar.Template(@<text>
                <div class="toolbar" style="direction: ltr !important; ">

                    <div class="row pull-right ">
                        <div style="display: inline-block;">
                            <a class="pull-left k-button k-button-icontext k-grid-excel" href="#"><span class="k-icon k-i-excel"></span>Excel</a>
                        </div>
                        <div class="" style="width: 400px; margin-right: 15px; display: inline-block;">
                            <div class="input-group">
                                <span class="input-group-addon"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></span>
                                <input type="text" class="form-control" id='FieldFilter' placeholder="جست و جو..." style="direction: rtl">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="button"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                    </text>);
                  })
                  .AllowCopy(true)
                  .Selectable()
                   .Scrollable()
                  .HtmlAttributes(new { style = "height:500px;" })
                  .DataSource(dataSource => dataSource
                      .Ajax().Sort(x => x.Add(a => a.ValidFrom))
                      .PageSize(20).Read(read => read.Action("GetHistoricalManagementSettings", "ManagementSetting"))
                  )
                  .Resizable(resize => resize.Columns(true))
                  .Reorderable(reorder => reorder.Columns(true)))

        </div>
    </div>

</div>


<style type="text/css">
    .form-horizontal .form-group {
        margin-right: 0 !important;
        margin-left: 0 !important;
    }

    .form-group-material > .control-label {
        opacity: 1 !important;
        filter: alpha(opacity=0);
    }
</style>
<script type="text/javascript" src="~/assets/js/pages/form_validation.js"></script>
<script type="text/javascript" src="~/assets/js/plugins/forms/inputs/formatter.min.js"></script>
<script>
    $("#AddManagementSetting").click(function() {

        if ($("#managementSettingForm").kendoValidator().data("kendoValidator").validate() === false || $("#managementSettingForm").valid() === false) {
            alert("لطفا تمامی فیلدهای مورد نظر را پر نمایید");
            return;
        } else {
           // var data = @Html.Raw(Json.Encode(Model));
            var data = {
                "OperatinalAdministrator": $("#OperatinalAdministrator").data('kendoComboBox').dataItems()[0] != null ? $("#OperatinalAdministrator").data('kendoComboBox').dataItems()[0] : null,
                "FundManager": $("#FundManager").data('kendoComboBox').dataItems()[0],
                 "MinManagerUnit": $('[name=MinManagerUnit]').val(),
                 "MaxManagerUnit": $('[name=MaxManagerUnit]').val(),
                 "PercentageFromEquity": $('[name=PercentageFromEquity]').val(),
                 "PercentageFromBond": $('[name=PercentageFromBond]').val(),
                 "PercentageFromCoupon": $('[name=PercentageFromCoupon]').val(),
                 "DiffPercentFromBankDeposit": $('[name=DiffPercentFromBankDeposit]').val(),
                 "PercentageFromNetAssetValue": $('[name=PercentageFromNetAssetValue]').val(),
                 "YearlyFixedRate": $('[name=YearlyFixedRate]').val(),
                 "ConsiderTaxAndToll": $('[name=ManagementSettingConsiderTaxAndToll]').prop('checked'),
                 "ConsiderTaxAndTollFromDiffOfBankDeposit": $('[name=ConsiderTaxAndTollFromDiffOfBankDeposit]').prop('checked')
            };


            $.ajax({
                url: '@Url.Action("SaveSetting", "ManagementSetting")',
                type: "POST",
                dataType: "json",

                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                401: function() {
                    var url = '@Url.Action("Login", "Account")';
                    window.location.href = url;
                },
                error: function(response) {

                    showNotification(response.Message, 'e');
                },

                success: function(response) {

                    if (response != null && response.BRuleCode == '1000') {
                        showNotification(response.Message, 's');
                        $(':input', '#managementSettingForm')
                            .not(':button, :submit, :reset, :hidden')
                            .val('')
                            .removeAttr('checked')
                            .removeAttr('selected');
                        $('#grid').data('kendoGrid').dataSource.read();

                    } else {
                        showNotification(response.Message, 'e');

                    }
                }
            });
        }
    });

    function showDetails(e) {
        e.preventDefault();
        $("#fielsSet").removeAttr('disabled');

    }



    function GridonChenge(e) {
        $("#fielsSet").attr('disabled', 'disabled');
        var grid = $("#grid").data("kendoGrid");
        var dataItem = grid.dataItem(grid.select());
       // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        $('[name=MinManagerUnit]').val(dataItem.MinManagerUnit);
        $('[name=MaxManagerUnit]').val(dataItem.MaxManagerUnit);
        $('[name=ManagementSettingConsiderTaxAndToll]').prop('checked', dataItem.ConsiderTaxAndToll);
        $('#OperatinalAdministrator').data("kendoMultiSelect").value([dataItem.OperatinalAdministrator.NationalId]);
        $('#FundManager').data("kendoMultiSelect").value([dataItem.FundManager.NationalId]);


        $('[name=PercentageFromEquity]').val(dataItem.PercentageFromEquity);
        $('[name=PercentageFromBond]').val(dataItem.PercentageFromBond);
        $('[name=PercentageFromCoupon]').val(dataItem.PercentageFromCoupon);
        $('[name=DiffPercentFromBankDeposit]').val(dataItem.DiffPercentFromBankDeposit);
        $('[name=PercentageFromNetAssetValue]').val(dataItem.PercentageFromNetAssetValue);
        $('[name=YearlyFixedRate]').val(dataItem.YearlyFixedRate);
        $('[name=ConsiderTaxAndTollFromDiffOfBankDeposit]').prop('checked', dataItem.ConsiderTaxAndTollFromDiffOfBankDeposit);


    }


</script>

