@using PersonalityRole = IranMarketer.Domain.Enum.PersonalityRole
@using Kendo.Mvc.UI
@using IranMarketer.Common.Utility
@using IranMarketer.Domain.Entity,
@model InvestmentManagerSetting
<form id="InvestmentManagerSettingForm">
    <div class="panel panel-flat">

        <div class="panel-body" style="display: block;">
            <fieldset id="fielsSet1">
            <div class="form-group">
                <label>مدیران سرمایه گذاری حقوقی</label>
                @(Html.Kendo().MultiSelect().Name("LegalInvestmentManagers")
                      .HtmlAttributes(new {@class = " k-rtl"})
                      .DataTextField("FullName")
                      .DataValueField("NationalId").Filter(FilterType.Contains)
                      .AutoBind(false)
                      .AutoClose(false)
                      .MinLength(3)

                      .DataSource(source => source.Read(read => read.Action("GetPartyByFilter", "Party",new{roleId=(int)PersonalityRole.InvestmentManager})).ServerFiltering(true)))

            </div>
            <div class="form-group">
                <label>مدیران سرمایه گذاری حقیقی</label>
                @(Html.Kendo().MultiSelect().Name("NaturalInvestmentManagers") .HtmlAttributes(new {@class = "k-rtl"})
                      .DataTextField("FullName")
                      .DataValueField("NationalId").Filter(FilterType.Contains)
                      .AutoBind(false)
                      .AutoClose(false)
                      .MinLength(3)

                      .DataSource(source => source.Read(read => read.Action("GetPartyByFilter", "Party",new{roleId=(int)PersonalityRole.InvestmentManager})).ServerFiltering(true)))


            </div>
            <div class="form-group col-md-6">
                <label>حداقل تعداد واحد مدیر</label>
                <input type="number" min="0" class="form-control" required="required" placeholder="حداقل تعداد واحد مدیر" name="@Model.Guid.ToString()MinManagerUnit" data-bind="value: MinManagerUnit" value="@Model.MinManagerUnit">
            </div>
            <div class="form-group col-md-6">
                <label>حداکثر تعداد واحد مدیر</label>
                <input type="number" min="0" class="form-control" required="required" placeholder="حداکثر تعداد واحد مدیر" name="@Model.Guid.ToString()MaxManagerUnit" data-bind="value: MaxManagerUnit" value="@Model.MaxManagerUnit">
            </div>


            <div class="text-right">
                <button id="addInvestmentManagerSetting" type="button" class="btn btn-primary legitRipple">ذخیره<i class="icon-arrow-left13 position-right"></i></button>
            </div>
                </fieldset>
        </div>
  
    </div>  

</form>

<div class="panel panel-flat panel-collapsed">
    <div class="panel-heading">
        <h5 class="panel-title">تاریخچه تنظیمات<a class="heading-elements-toggle"><i class="icon-more"></i></a></h5>
        <div class="heading-elements">
            <ul class="icons-list">
                <li><a data-action="collapse"></a></li>
                <li><a data-action="reload"></a></li>
                <li><a data-action="close"></a></li>
            </ul>
        </div>
    </div>
    <div class="panel-body">
        <div class="k-rtl">
            @(Html.Kendo().Grid<InvestmentManagerSetting>()
                  .Name("InvestmentManagerSettingGrid")
                  .Columns(column =>
                  {

                      column.Bound(x => x.MaxManagerUnit).Title("حداکثر تعداد واحد مدیران سرمایه گذاری");
                      column.Bound(x => x.MinManagerUnit).Title("حداقل تعداد واحد مدیران سرمایه گذاری");
                      column.Bound(x => x.ValidFromJalali).Title("تاریخ");

                      //.ClientTemplate("<a href='" + Url.Action("UpdateUser", "UserManagement", new { UserName = "#=UserName#" }) + "'>#=UserName#</a>").HtmlAttributes("id=RowClick");
                      //.ClientTemplate("<a href='" + Url.Action("GetLogDetails", "Monitoring", new { Id = "#=Id#"}) + "'>#=EventDateTime#</a>").HtmlAttributes("id=RowClick");
                      column.Command(command => command.Custom("ویرایش").Click("showDetails1")).Width(180);
                  })
                  .Excel(excel => excel
                      .FileName("InvestmentManagersSetting.xlsx")
                      .Filterable(true)
                      .AllPages(true)
                      .ForceProxy(true)
                      .AllPages(true)
                      .ProxyURL(Url.Action("CustomExcelReport", "ExpenseSetting"))
                  )
                  .Selectable(x =>
                  {
                      x.Enabled(true).Mode(GridSelectionMode.Single).Type(GridSelectionType.Row);
                  }).Events(c=>c.Change("InvestmentManagerSettingGridonChenge"))
                  .Pageable(pager => pager
                      .Input(true)
                      .Numeric(true)
                      .Info(true)
                      .PreviousNext(true)
                      .Refresh(true)
                      .PageSizes(new[] {10, 20, 50, 100}))
                  .ToolBar(toolbar =>
                  {
                      toolbar.Template(@<text>
                                           <div class="toolbar" style="direction: ltr !important;">

                                               <div class="row pull-right ">
                                                   <div style="display: inline-block;">
                                                       <a class="pull-left k-button k-button-icontext k-grid-excel" href="#"><span class="k-icon k-i-excel"></span>Excel</a>
                                                   </div>
                                                   <div class="" style="width: 400px; margin-right: 15px; display: inline-block;">
                                                       <div class="input-group">
                                                           <span class="input-group-addon"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></span>
                                                           <input type="text" class="form-control" id='FieldFilter' placeholder="جست و جو..." style="direction: rtl">
                                                           <span class="input-group-btn">
                                                               <button class="btn btn-default" type="button"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                                                           </span>
                                                       </div>
                                                   </div>
                                               </div>
                                           </div>
                                        </text>);
                  })
                  .AllowCopy(true)
                  .Selectable()
                  .HtmlAttributes(new {style = "height:500px;"})
                  .DataSource(dataSource => dataSource
                      .Ajax().Sort(x=>x.Add(a=>a.ValidFrom).Descending())
                      .PageSize(20).Read(read => read.Action("GetHistoricalInvestmentManagerSetting", "InvestmentManagerSetting"))
                  )
                  .Resizable(resize => resize.Columns(true))
                  .Reorderable(reorder => reorder.Columns(true)))

        </div>
    </div>

</div>




<style type="text/css">
    .form-horizontal .form-group {
        margin-right: 0 !important;
        margin-left: 0 !important;
    }

    .form-group-material > .control-label {
        opacity: 1 !important;
        filter: alpha(opacity=0);
    }
</style>
<script type="text/javascript" src="~/assets/js/pages/form_validation.js"></script>
<script type="text/javascript" src="~/assets/js/plugins/forms/inputs/formatter.min.js"></script>
<script>
    $("#addInvestmentManagerSetting").click(function() {
       
        if (!$("#managementSettingForm").valid()) {
            return;
        } else {

            debugger;
            // var data = @Html.Raw(Json.Encode(Model));
            var dataItem = $('#NaturalInvestmentManagers').data("kendoMultiSelect").dataItems();

            var data = {
                "LegalInvestmentManagers": $('#LegalInvestmentManagers').data("kendoMultiSelect").dataItems(),
                "NaturalInvestmentManagers": $('#NaturalInvestmentManagers').data("kendoMultiSelect").dataItems(),
                "MinManagerUnit": $('[name=@Model.Guid.ToString()MinManagerUnit]').val(),
                "MaxManagerUnit": $('[name=@Model.Guid.ToString()MaxManagerUnit]').val()
            };



            $.ajax({
                url: '@Url.Action("SaveSetting", "InvestmentManagerSetting")',
                type: "POST",
                dataType: "json",

                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                401: function() {
                    var url = '@Url.Action("Login", "Account")';
                    window.location.href = url;
                },
                error: function(response) {

                    showNotification(response.Message, 'e');
                },

                success: function(response) {

                    if (response != null && response.BRuleCode == '1000') {
                        showNotification(response.Message, 's');
                        $(':input', '#InvestmentManagerSettingForm')
                            .not(':button, :submit, :reset, :hidden')
                            .val('')
                            .removeAttr('checked')
                            .removeAttr('selected');
                        $('#InvestmentManagerSettingGrid').data('kendoGrid').dataSource.read();

                    } else {
                        showNotification(response.Message, 'e');

                    }
                }
            });
        }
    });

    function showDetails1(e) {
        e.preventDefault();
        $("#fielsSet1").removeAttr('disabled');

    }

    function InvestmentManagerSettingGridonChenge(e) {
        debugger;
        $("#fielsSet1").attr('disabled', 'disabled');
        var grid = $("#InvestmentManagerSettingGrid").data("kendoGrid");
        var dataItem = grid.dataItem(grid.select());

        // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        if (dataItem.LegalInvestmentManagers != null) {
            var legalInvestmentManagersIds = $.map(dataItem.LegalInvestmentManagers, function (v){
                return v.NationalId;
            });
            $('#LegalInvestmentManagers').data("kendoMultiSelect").value(legalInvestmentManagersIds);
        }

        if (dataItem.NaturalInvestmentManagers != null) {
            var naturalInvestmentManagersIds = $.map(dataItem.NaturalInvestmentManagers, function (v){
                return v.NationalId;
            });
            $('#NaturalInvestmentManagers').data("kendoMultiSelect").value(naturalInvestmentManagersIds);


        }

  

     
        $('[name=@Model.Guid.ToString()MinManagerUnit]').val(dataItem.MinManagerUnit);
        $('[name=@Model.Guid.ToString()MaxManagerUnit]').val(dataItem.MaxManagerUnit);


        //$('[name=OperatinalAdministratorData]').val(kendo.stringify(dataItem.OperatinalAdministrator));
        //$('[name=FundManagerData]').val(kendo.stringify(dataItem.FundManager));


        //$("#DocumentGrid").data("kendoGrid").dataSource.read();
        //$('[name=MinManagerUnit]').val(dataItem.MinManagerUnit);
        //$('[name=MaxManagerUnit]').val(dataItem.MaxManagerUnit);
        //$('[name=ConsiderTaxAndToll]').prop('checked', dataItem.ConsiderTaxAndToll);
        //$('#OperatinalAdministrator').data("kendoAutoComplete").value(dataItem.OperatinalAdministrator.FullName);
        //$('#FundManager').data("kendoAutoComplete").value(dataItem.FundManager.FullName);

    }
</script>
             
