@Html.Partial("_RegisterLastVersionOfKendo")
@using Kendo.Mvc.UI
@using Pikad.Framework.Infra.Utility
@using IranMarketer.Domain.DTO
@using IranMarketer.Domain.Entity
@model IranMarketer.App.Component.Model.DetailLedgerModel

@{
    Layout = "../Shared/_Layout.cshtml";
    ViewBag.Title = "تراز آزمایشی تفصیلی";
}
<div>

    <div id="filterPanel" class="panel panel-flat">
        <div class="panel-heading">
            <h5 class="panel-title">فیلتر جستجو</h5>
            <div class="heading-elements">
                <ul class="icons-list">
                    <li><a data-action="collapse"></a></li>

                </ul>
            </div>
        </div>

        <div class="panel-body">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label>سال مالی</label>
                        @(Html.Kendo().DropDownList().Name("FiscalYearId").HtmlAttributes(new { @class = "form-control k-rtl" })
                      .DataTextField("Title")
                      .Filter(FilterType.Contains)
                      .DataValueField("Id")
                        .SelectedIndex(0)
                        .Events(x =>
                        {
                            x.Change("onfiscalYearChange");
                            x.DataBound("onfiscalYearChange");

                        })
                      .AutoBind(true)
                      .DataSource(source => source.Read(read => read.Action("GetFiscalYears", "UIComponent")).ServerFiltering(false)))
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label>شعبه</label>
                        @(Html.Kendo().ComboBoxFor(x => x.BranchId).HtmlAttributes(new { @class = "form-control k-rtl" })
                      .DataTextField("BranchTitle")
                      .Filter(FilterType.Contains)
                      .DataValueField("BranchValue")
                      .AutoBind(true)
                      .Value("همه")
                      .DataSource(source => source.Read(read => read.Action("GetBranchesDropDownListById", "UIComponent", new { addAll = true }).Data("onadditionalBranch")).ServerFiltering(false)))
                    </div>
                </div>
            </div>


            <div class="row">

                <div class="col-md-6">
                    <div class="form-group">
                        <label>از تاریخ</label>
                        @Html.Kendo().DatePickerFor(x => x.StartDate).HtmlAttributes(new { style = "width:250px", type = "text" }).Format("yyyy/MM/dd")
                    </div>
                </div>
                <div class="col-md-6">

                    <div class="form-group">
                        <label>تا تاریخ</label>
                        @Html.Kendo().DatePickerFor(x => x.EndDate).HtmlAttributes(new { style = "width:250px", type = "text" }).Format("yyyy/MM/dd")

                    </div>
                </div>

            </div>

            <div class="row">
                <label>حساب معین</label>
                @(Html.Kendo().ComboBoxFor(m => m.SubsidiaryLedgerCodeName).HtmlAttributes(new { @class = "form-control k-rtl", style = "width:70%" })
                      .DataTextField("FullTitle")
                      .Filter(FilterType.Contains)
                      .DataValueField("Id")
                      //.SelectedIndex(0)
                      .AutoBind(false)
                      .DataSource(source => source.Read(read => read.Action("GetSubsidiaryLedgersAutoComplete", "Ledgers"))
                      .ServerFiltering(true)).Events(e => e.Select("onSubsidiaryLedgerSelect")))
                <input type="hidden" id="SubsidiaryLedgerCode" name="SubsidiaryLedgerCode" data-bind="value: @Model.SubsidiaryLedgerCode" value="@Model.SubsidiaryLedgerCode" />
            </div>
            <div class="row">
                <div class="col-md-6">
                    <label>از تفصیل</label>
                    @(Html.Kendo().AutoComplete().Name("FromDetailLedgersId").HtmlAttributes(new { @class = " k-rtl", required = "required", style = "width:100%;font-size:12px;" })
                      .DataTextField("FullTitle")
                      .Filter(FilterType.Contains)
                      .MinLength(3)
                      .Animation(true)
                      .DataSource(source => source.Read(read => read.Action("GetDetailLedgersAutoComplete", "Ledgers").Data("onDetailLedgersDataFrom")).ServerFiltering(true)))
                </div>
                <div class="col-md-6">
                    <label>تا تفصیل</label>
                    @(Html.Kendo().AutoComplete().Name("ToDetailLedgersId").HtmlAttributes(new { @class = " k-rtl", required = "required", style = "width:100%;font-size:12px;" })
                          .DataTextField("FullTitle")
                          .Filter(FilterType.Contains)
                          .MinLength(3).Animation(true)
                          .DataSource(source => source.Read(read => read.Action("GetDetailLedgersAutoComplete", "Ledgers").Data("onDetailLedgersDataTo")).ServerFiltering(true)))
                </div>
            </div>


            <div class="row">

                <div class="col-md-6">
                    <div class="form-group">
                        <label>شماره سند: از</label>
                        <input class="form-control" type="number" min="0" id="FromVoucherNumber" />

                    </div>
                </div>
                <div class="col-md-6">

                    <div class="form-group">
                        <label>تا  </label>
                        <input class="form-control" type="number" min="0" id="ToVoucherNumber" />

                    </div>
                </div>

            </div>
            <div class="row">
                <div class="form-group">
                    <label>مانده</label>
                    @(Html.Kendo().DropDownList().Name("AccountRemainingType").HtmlAttributes(new { @class = "form-control k-rtl" })
                  .DataTextField("AccountBalanceRemainTitle")
                  .Filter(FilterType.Contains)
                  .DataValueField("AccountBalanceRemainValue")
                  .SelectedIndex(0)
                  .AutoBind(true)
                  .DataSource(source => source.Read(read => read.Action("GetAccountBalanaceRemainType", "UIComponent")).ServerFiltering(false)))
                </div>
            </div>

            <div class="row">

                <div class="col-md-4">
                    <div class="form-group">
                        <label>بدون سند افتتاحیه</label>
                        <input type="checkbox" id="OpeningAccounts" value="360" />

                    </div>
                </div>
                <div class="col-md-4">

                    <div class="form-group">
                        <label>بدون سند اختتامیه </label>
                        <input type="checkbox" id="ClosingAccounts" value="370" />

                    </div>
                </div>
                <div class="col-md-4">

                    <div class="form-group">
                        <label>بدون سند بستن عملکرد </label>
                        <input type="checkbox" id="OperationalAccountsClosing" value="350" />


                    </div>
                </div>

            </div>


            <div class="text-right">
                <button type="button" id="search" class="btn btn-primary">جست و جو <i class="icon-arrow-left13 position-right"></i></button>
            </div>
        </div>
    </div>

    <div class="panel panel-body" style="min-height: 670px">
        <div class="k-rtl" style="font-size: 12px;">
            @(Html.Kendo().Grid<AccountBalanceSheet>()
              .Name("grid")
              .Columns(column =>
              {
                  column.Bound(x => x.AccountCode).Title("کد حساب").Width(60).ClientTemplate("<a onclick='filterString(${AccountCode})'>${AccountCode}</a>").ClientFooterTemplate("جمع کل"); ;
                  column.Bound(x => x.AccountTitle).Title("عنوان حساب").Width(140);
                  column.Bound(x => x.DebitSum).Title("گردش بدهکار").Width(120).ClientTemplate("#=SetColor(DebitSum)#").ClientFooterTemplate(" #=SetColor(sum)#");
                  column.Bound(x => x.CreditSum).Title("گردش بستانکار").Width(120).ClientTemplate("#=SetColor(CreditSum)#").ClientFooterTemplate(" #=SetColor(sum)#");
                  column.Bound(x => x.DebitLeave).Title("مانده بدهکار").Width(120).ClientTemplate("#=SetColor(DebitLeave)#").ClientFooterTemplate("#=SetColor(sum)#");
                  column.Bound(x => x.CreditLeave).Title("مانده بستانکار").Width(120).ClientTemplate("#=SetColor(CreditLeave)#").ClientFooterTemplate(" #=SetColor(sum)#");

              }).ToolBar(x =>
              {
                  x.Excel().Text("Excel");
              })
              .Excel(excel => excel
                  .FileName("DetailLedgers.xlsx")
                  .Filterable(true)
                  .AllPages(true)


                  .ForceProxy(true)

                  .AllPages(true)
                  .ProxyURL(Url.Action("CustomExcelReport", "Ledgers"))
              )
                  .Sortable(sortable => sortable.AllowUnsort(false))

                  .Pageable(pager => pager
                      .Input(true)
                      .Numeric(true)
                      .Info(true)
                      .PreviousNext(true)
                      .Refresh(true)
                      .PageSizes(new[] { 150, 200, 250, 300 }))

                  .AllowCopy(true)
                  .Selectable(x => x.Mode(GridSelectionMode.Multiple))
                  .Scrollable()
                  .AutoBind(false)
              .HtmlAttributes(new { style = "height:600px;" })
              .DataSource(dataSource =>
                  dataSource.Custom()
                      .Type("aspnetmvc-ajax")
                        .Aggregates(x =>
                        {
                            x.Add(p => p.DebitSum).Sum();
                            x.Add(p => p.CreditSum).Sum();
                            x.Add(p => p.DebitLeave).Sum();
                            x.Add(p => p.CreditLeave).Sum();


                        })

                      .Transport(transport => transport
                          .Read(read => read.Action("GetNormalDetailLedgerBalanceSheet", "Ledgers").Data("filterData").Type(HttpVerbs.Post))
                      )
                      .Schema(s => s.Data("Result").Total("TotalRecords"))
                      .PageSize(150)
                      .ServerPaging(true)
                      .ServerSorting(true)
                      .ServerFiltering(true)

              )
              .Resizable(resize => resize.Columns(true))
              .Reorderable(reorder => reorder.Columns(true)))

        </div>
    </div>
</div>
<style type="text/css">
    .form-horizontal .form-group {
        margin-right: 0 !important;
        margin-left: 0 !important;
    }

    .form-group-material > .control-label {
        opacity: 1 !important;
        filter: alpha(opacity=0);
    }


    .dropdown-header {
        /*font-size: 1.2em;*/
        padding: 0px 0px;
        text-align: right;
    }

        .dropdown-header > span {
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            text-align: right;
            display: inline-block;
            border-style: solid;
            border-width: 0 0 1px 1px;
            padding: .3em .6em;
            width: 150px;
        }

            .dropdown-header > span:first-child {
                width: 150px;
                border-left-width: 0;
            }
</style>


<script>
    $(document).ready(function () {
        onfiscalYearChange();
        setTimeout(function () {
            $("#grid").data("kendoGrid").dataSource.read();
        }, 1500);
    });


    function onadditionalBranch() {
        return {
            text: $('[name="BranchId_input"]').val()
        };
    }

    function onSubsidiaryLedgerSelect(e) {

        var dataItem = this.dataItem(e.item.index());
        var p = $('[name="SubsidiaryLedgerCode"]');
        $(p).val(dataItem.Code);
    }

    function filterData(object = false) {

        var exceptionList = [];
        if ($("#OperationalAccountsClosing").prop('checked') === true) {

            exceptionList.push($("#OperationalAccountsClosing").val());
        }
        if ($("#ClosingAccounts").prop('checked') === true) {

            exceptionList.push($("#ClosingAccounts").val());
        }
        if ($("#OpeningAccounts").prop('checked') === true) {

            exceptionList.push($("#OpeningAccounts").val());
        }

        //var subsidariCode = $("#SubsidiaryLedgerId").data("kendoComboBox").dataItem();
        var subsidariCode = $('[name = "SubsidiaryLedgerCode"]').val();

        var fromdetailsCode = $("#FromDetailLedgersId").data("kendoAutoComplete").dataItem();
        var todetailsCode = $("#ToDetailLedgersId").data("kendoAutoComplete").dataItem();

        var data = {

            BranchId: $("#BranchId").val(),
            StartDate: $("#StartDate").val(),
            EndDate: $("#EndDate").val(),
            FiscalYearId: $("#FiscalYearId").data("kendoDropDownList").dataItem() != null ? $("#FiscalYearId").data("kendoDropDownList").dataItem().Id : "-1",
            ToVoucherNumber: $("#ToVoucherNumber").val() != "" ? $("#ToVoucherNumber").val() : 0,
            FromVoucherNumber: $("#FromVoucherNumber").val() != "" ? $("#FromVoucherNumber").val() : 0,
            //AccountRemainingType: $("#AccountRemainingType").data("kendoDropDownList").dataItem().AccountBalanceRemainValue,
            AccountRemainingType: $("#AccountRemainingType").val(),
            VouhcerCategoryExcetionListCode: exceptionList,
            //SubsidiaryLedgerCode: subsidariCode != undefined ? subsidariCode.Code : "",
            SubsidiaryLedgerCode: subsidariCode != undefined ? subsidariCode : "",
            FromDetailLedgerCode: fromdetailsCode != undefined ? fromdetailsCode.Code : "",
            ToDetailLedgerCode: todetailsCode != undefined ? todetailsCode.Code : ""
        }
        if (!$('#filterPanel').hasClass('panel-collapsed'))
            $('#filterPanel [data-action=collapse]').click();

        return { model: data };

    }

    $("#search").click(function () {

        $("#grid").data("kendoGrid").dataSource.read();
    });


    function onfiscalYearChange() {
        var dataItem = $("#FiscalYearId").data("kendoDropDownList").dataItem();
        if (dataItem != null) {
            if ($("#EndDate").val() == "")
                $("#EndDate").val(dataItem.EndDateJalali);
            if ($("#StartDate").val() == "")
                $("#StartDate").val(dataItem.StartDateJalali);
        }
    }

    function SetColor(e) {
        if (e < 0)
            return kendo.toString(Math.abs(e), "#,##0;#,##0");
        //return "<font color=\"red\">" + kendo.toString(e, "0:#,##0;(#,##0)")+"</font>";
        else if (e > 0)
            return kendo.toString(e, "#,##0;#,##0");
        else return "0";

    }


    function onDetailLedgersDataFrom(e) {

        var subsidariCode = $("#SubsidiaryLedgerId").data("kendoComboBox").dataItem();
        var text = $("#FromDetailLedgersId").data("kendoAutoComplete").value();
        if (subsidariCode != null)
            return { text: text, accountClassId: subsidariCode.ClassId }
        else return { text: text, accountClassId: 0 }
    }

    function onDetailLedgersDataTo(e) {

        var subsidariCode = $("#SubsidiaryLedgerId").data("kendoComboBox").dataItem();
        var text = $("#ToDetailLedgersId").data("kendoAutoComplete").value();
        if (subsidariCode != null)
            return { text: text, accountClassId: subsidariCode.ClassId }
        else return { text: text, accountClassId: 0 }
    }
</script>