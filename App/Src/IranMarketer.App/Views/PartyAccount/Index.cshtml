@Html.Partial("_RegisterLastVersionOfKendo")
@using Kendo.Mvc.UI
@using IranMarketer.Domain.DTO
@using IranMarketer.Domain.Entity
@model IranMarketer.Domain.Entity.PartyBankAccount
@{
    Layout = "../Shared/_Layout.cshtml";
    ViewBag.Title = "مدیریت حساب های مشتری";
}

<div class="panel panel-flat">
<div class="panel-heading">
    <h5 class="panel-title">مدیریت حساب های مشتری</h5>

</div>
<script type="text/javascript" src="~/assets/js/pages/form_validation.js"></script>
<script type="text/javascript" src="~/assets/js/plugins/forms/inputs/formatter.min.js"></script>
<div class="panel-body">
        
    <div class="form-group k-rtl">
        <div class="form-group k-rtl">
            <label>مشتری</label>
            @(Html.Kendo().AutoCompleteFor(x=>x.PartyId)
                  .DataTextField("FullName")
                  .Filter(FilterType.Contains)
                  .MinLength(3)
                  .HtmlAttributes(new
                  {
                      style = "width:630px;",
                      //data_required_msg = "اطلاعات مشتری الزامی است",
                      //required = "required"
                  })
                  .HeaderTemplate("<div style=\"width:630px !important;\" class=\"dropdown-header\">" +
                                  "<span style=\"width:290px;\" class=\"k-widget k-header\" >عنوان</span>" +
                                  "<span class=\"k-widget k-header\" >کد ملی</span>" +
                                  "<span class=\"k-widget k-header\" >نام پدر</span>" +
                                  "</div>")
                  .Template("<div  class=\"dropdown-header\">" +
                            "<span style=\"width:290px;\" class=\"k-state-default\">#: data.FullName #</span>" +
                            "<span class=\"k-state-default\">#: data.NationalId #</span>" +
                            "<span class=\"k-state-default\">#: data.FatherName #</span>" +
                            "</div>").HtmlAttributes(new {style = "width:630px;"})
                  .Placeholder("جستجوی مشتری بر اساس  نام و نام خانوادگی و کد ملی")
                  .DataSource(source =>
                  {
                      source
                          .Custom()
                          .ServerFiltering(true)
                          .ServerPaging(true)
                          .PageSize(100)
                          .Type("aspnetmvc-ajax")
                          .Transport(t =>
                          {
                              t.Read(r =>
                              {
                                  r.Action("GetCustomerAutoCompleteFilter", "Party");
                              });
                          })

                          .Schema(s =>
                          {
                              s.Data("Data").Total("Total");
                          });
                      ;

                  }).Events(e =>
                  {
                      e.Change("OnChange");
                  })
                  .Virtual(v => v.ItemHeight(26))
                  )
            <input type="hidden" id="PartyId" name="PartyId" data-bind="value: getPartyId"/>
        </div>
    </div>
    <div class="text-right">
        <button type="button" id="search" class="btn btn-primary">جست و جو <i class="icon-arrow-left13 position-right"></i></button>
    </div>
        
    <div class="k-rtl">
        @(Html.Kendo().Grid<IranMarketer.Domain.Entity.PartyBankAccount>()
              .Name("grid")
              .Columns(column =>
              {

                  column.Bound(x => x.BankTitle).Title("نام بانک");
                  column.Bound(x => x.BranchName).Title("نام شعبه");
                  column.Bound(x => x.BranchCode).Title("کد شعبه");
                  column.Bound(x => x.AccountNumber).Title("شماره حساب");
                  column.Bound(x => x.IBAN).Title("شبا");
                  column.Bound(x => x.IsDefault).ClientTemplate("#= IsDefault ? 'بله' : 'خیر' #").Title("پیشفرض");
              
                  column.Command(command => command.Custom("ویرایش").Click("showDetails")).Width(180);

              })
              .Mobile(MobileMode.Auto)
              .Excel(excel => excel
                  .FileName("PartyAccount.xlsx")
                  .Filterable(true)
                  .AllPages(true)

                  .ForceProxy(true)

                  .AllPages(true)
                  .ProxyURL(Url.Action("CustomExcelReport", "PartyAccount"))
              )
              .Sortable(sortable => sortable.AllowUnsort(false))

              .Pageable(pager => pager
                  .Input(true)
                  .Numeric(true)
                  .Info(true)
                  .PreviousNext(true)
                  .Refresh(true)
                  .PageSizes(new[] {10, 20, 50, 100}))
              .ToolBar(toolbar =>
              {
                  toolbar.Template(@<text>
                                       <div class="toolbar" style="direction: ltr !important;">

                                           <div class="row pull-right ">
                                               <div style="display: inline-block;">
                                                   <a class="pull-left k-button k-button-icontext k-grid-excel" href="#"><span class="k-icon k-i-excel"></span>Excel</a>
                                               </div>
                                               <div class="" style="width: 400px; margin-right: 15px; display: inline-block;">
                                                   <div class="input-group">
                                                       <span class="input-group-addon"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></span>
                                                       <input type="text" class="form-control" id='FieldFilter' placeholder="جست و جو..." style="direction: rtl">
                                                       <span class="input-group-btn">
                                                           <button class="btn btn-default" type="button"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                                                       </span>
                                                   </div>
                                               </div>
                                           </div>
                                       </div>
                                    </text>);
              })
              .AllowCopy(true)
              .Selectable()
              .Scrollable()
              .Selectable(x =>
              {
                  x.Enabled(true).Mode(GridSelectionMode.Single).Type(GridSelectionType.Row);
              }).Events(c => c.Change("onSelectGrid"))
              .HtmlAttributes(new {style = "height:500px;"})
              .DataSource(dataSource => dataSource
                  .Ajax()
                  .PageSize(20).Read(read => read.Action("GetPartyBankAccountByPartyId", "PartyAccount").Data("sendPartyId"))
              )
              .Resizable(resize => resize.Columns(true))
              .Reorderable(reorder => reorder.Columns(true)))

    </div>
               

        

</div>
<form id="form">
    <div class="panel panel-flat">
        <div class="panel-body" style="display: block;">
            <fieldset id="fielsSet"class="content-group k-rtl">
                <legend class="text-bold">افزودن حساب بانکی  </legend>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group form-group-material">
                            
                            @(Html.Kendo().ComboBox().Name("BankId")
                                  //.Name("roles")
                                  .DataTextField("Title").Placeholder("انتخاب  بانک ...")
                                  .DataValueField("CodeId")
                                  .HtmlAttributes(new
                                  {
                                      style = "width:400px;margin-right: 1px;",
                                      data_required_msg = "شهر الزامی است",
                                      required = "required"
                                
                                  })

                                  .Filter("contains")
                                  .AutoBind(true)
                                  .MinLength(3)
                                  .Value("")
                                  .DataSource(
                                      source => source.Read(read => read.Action("GetBankNames", "UIComponent")
                                          .Data("onAdditionalDataBankName")
                                          ).ServerFiltering(true))
                                  )
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group form-group-material">
                            @Html.Kendo().DropDownList().Name("AccountType").DataTextField("Title").DataValueField("Code").Filter(FilterType.Contains).DataSource(source =>
                            {

                                source.Custom()
                                    .ServerFiltering(false)
                                    .ServerPaging(false)
                                    .PageSize(100)
                                    .Type("aspnetmvc-ajax")
                                    .Transport(t =>
                                    {
                                        t.Read(r =>
                                        {
                                            r.Action("GetBankAccountTypes", "UIComponent");
                                        });
                                    });
                            })
                        </div>
                    </div>
                       

                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group form-group-material">
                            <label>شعبه</label>
                            @Html.TextBox("BranchName",null, new {@class= "form-control" }) 
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group form-group-material">
                            <label>کد شعبه</label>
                            @Html.TextBox("BranchCode", null, new { @class = "form-control" }) 
                        </div>
                    </div>
              

                </div>
      
             
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group form-group-material">
                            <label>شماره حساب</label>
                            @Html.TextBox("AccountNumber", null, new {required= "required",@class= "form-control" }) 
                            <span class="text-danger">*</span>

                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group form-group-material">
                            <label>شماره شبا</label>
                            @Html.TextBox("IBAN", null, new {required= "required", @class = "form-control" }) 
                            <span class="text-danger">*</span>
                        </div>
                    </div>

                </div>
                           <div class="row">
                               <div class="col-md-6">
                                   <div class="form-group form-group-material">
                                       <label>پیشفرض</label>
                                       @Html.CheckBox("IsDefault") 
                                   </div>
                               </div>
                               <div class="col-md-6">
                                   <div class="form-group form-group-material">
                                       <label>وضعیت</label>
                            
                                       @Html.Kendo().DropDownList().Name("Status").DataTextField("UserStatusTitle").DataValueField("UserStatusValue").Filter(FilterType.Contains).DataSource(source =>
                                       {

                                           source.Custom()
                                               .ServerFiltering(false)
                                               .ServerPaging(false)
                                               .PageSize(100)
                                               .Type("aspnetmvc-ajax")
                                               .Transport(t =>
                                               {
                                                   t.Read(r =>
                                                   {
                                                       r.Action("GetAccountStatusType", "UIComponent");
                                                   });
                                               });
                                       })
                                   </div>
                               </div>

                </div>
            
      
                    

      
                  
            </fieldset>


            <div class="text-right">
                <button id="Update" type="button" class="btn btn-primary legitRipple">ذخیره<i class="icon-arrow-left13 position-right"></i></button>
                <button id="clearAdd" type="button" class="btn btn-primary legitRipple">افزودن حساب جدید<i class="icon-arrow-left13 position-right"></i></button>

            </div>
        </div>
    </div>

</form>
    

</div>

<script>
    function AuditorSettingOnAdditionalData1() {
        return {
            text: $("#PartyId").val()
        };
    }

    function OnChange() {
      // $("#grid").data("kendoGrid").dataSource.read();


    }

    $("#search").click(function() {
         $("#grid").data("kendoGrid").dataSource.read();

    });

    function sendPartyId(e) {
        var auto = $("#PartyId").data("kendoAutoComplete").dataItem();
        var id;
        if (auto != null)
            id = auto.Id;
        else
            id = 0;

        return { Id:id };
    }

    $("#clearAdd").click(function() {
 
      


        var grid = $("#grid").data("kendoGrid");
        grid.clearSelection();
        document.getElementById("form").reset();
        $("#fielsSet").removeAttr('disabled');

    });

    $("#Update").click(function() {
        if (!$("#form").valid()) {
            return;
        } else {

            debugger;

            $("#fielsSet").attr('disabled', 'disabled');
            var grid = $("#grid").data("kendoGrid");
            var dataItem = grid.dataItem(grid.select());
            var id=0;
            if (dataItem != null)
                id = dataItem.Id;

            var data = {
                "BankId": $("#BankId").data("kendoComboBox").dataItem().CodeId,
                "BranchName": $('#BranchName').val(),
                "BranchCode": $('#BranchCode').val(),
                "AccountType": $("#AccountType").data("kendoDropDownList").value(),
                "IBAN": $('#IBAN').val(),
                "IsDefault": $("#IsDefault").prop('checked'),
                "AccountNumber": $("#AccountNumber").val(),
                "Status": $("#Status").data("kendoDropDownList").value(),

                "Id": id,
                "PartyId": $("#PartyId").data("kendoAutoComplete").dataItem().Id
        };

            var url;
            if (id == 0)
                url = '@Url.Action("SavePartyAccount", "PartyAccount")';
            else
                url = '@Url.Action("UpdatePartyBankAccount", "PartyAccount")';


            $.ajax({
                url: url,
                type: "POST",
                dataType: "json",

                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                401: function() {
                    var url = '@Url.Action("Login", "Account")';
                    window.location.href = url;
                },
                error: function(response) {

                    showNotification(response.Message, 'e');
                    document.getElementById("form").reset();
                    $("#fielsSet").removeAttr('disabled');
                },

                success: function(response) {

                    if (response != null && response.BRuleCode == '1000') {
                        showNotification(response.Message, 's');
                        $(':input', '#form')
                            .not(':button, :submit, :reset, :hidden')
                            .val('')
                            .removeAttr('checked')
                            .removeAttr('selected');
                        $('#grid').data('kendoGrid').dataSource.read();
                        document.getElementById("form").reset();
                        $("#fielsSet").removeAttr('disabled');

                    } else {
                        showNotification(response.Message, 'e');
                        document.getElementById("form").reset();
                        $("#fielsSet").removeAttr('disabled');

                    }
                }
            });
        }


    });





    function onSelectGrid(e) {
        debugger;
        var grid = $("#grid").data("kendoGrid");
        var dataItem = grid.dataItem(grid.select());
        if (dataItem != null) {
            $("#fielsSet").attr('disabled', 'disabled');

            $("#BankId").data("kendoComboBox").value(dataItem.BankId);
            $("#BranchName").val(dataItem.BranchName);
            $("#BranchCode").val(dataItem.BranchCode);
            $("#AccountType").data("kendoDropDownList").value(dataItem.AccountType);
            $("#AccountNumber").val(dataItem.AccountNumber);
            $("#IBAN").val(dataItem.IBAN);
            $("#IsDefault").prop("checked", dataItem.IsDefault);
            $("#Status").data("kendoDropDownList").value(dataItem.Status);

        }

        }
    function showDetails(e) {
        e.preventDefault();
        $("#fielsSet").removeAttr('disabled');

    }
    function onAdditionalDataBankName() {
        return {
            text: $('[name="BankId_input"]').val()
        };
    }


    $(document).ready(function () {
        $("#IBAN").formatter({
            pattern: 'IR{{999999999999999999999999}}'
        });


    });
</script>