// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace IranMarketer.Domain.Entity
{

    [Table("Region", Schema = "dbo")]
    public class Region
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_Region", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; }

        [Column(@"Title", Order = 2, TypeName = "nvarchar")]
        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "Title")]
        public string Title { get; set; }

        [Column(@"EnTitle", Order = 3, TypeName = "nvarchar")]
        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "En title")]
        public string EnTitle { get; set; }

        [Column(@"CodeId", Order = 4, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Code ID")]
        public string CodeId { get; set; }

        [Column(@"RegionType", Order = 5, TypeName = "int")]
        [Display(Name = "Region type")]
        public int? RegionType { get; set; }

        [Column(@"ZipCode", Order = 6, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Zip code")]
        public string ZipCode { get; set; }

        [Column(@"ValidFrom", Order = 7, TypeName = "date")]
        [Display(Name = "Valid from")]
        public System.DateTime? ValidFrom { get; set; }

        [Column(@"ValidUntil", Order = 8, TypeName = "date")]
        [Display(Name = "Valid until")]
        public System.DateTime? ValidUntil { get; set; }

        [Column(@"Created", Order = 9, TypeName = "datetime")]
        [Display(Name = "Created")]
        public System.DateTime? Created { get; set; }

        [Column(@"Modified", Order = 10, TypeName = "datetime")]
        [Display(Name = "Modified")]
        public System.DateTime? Modified { get; set; }

        [Column(@"CreatedBy", Order = 11, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Created by")]
        public string CreatedBy { get; set; }

        [Column(@"ModifiedBy", Order = 12, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Modified by")]
        public string ModifiedBy { get; set; }

        public virtual System.Collections.Generic.ICollection<PartyUniversity> City { get; set; }
        public virtual System.Collections.Generic.ICollection<PartyUniversity> Country { get; set; }
        public virtual System.Collections.Generic.ICollection<RetailParty> CityId { get; set; }
        public virtual System.Collections.Generic.ICollection<RetailParty> NationalityPlace { get; set; }
        public virtual System.Collections.Generic.ICollection<WorkExperience> WorkExperiences { get; set; }

        public Region()
        {
            City = new System.Collections.Generic.List<PartyUniversity>();
            Country = new System.Collections.Generic.List<PartyUniversity>();
            CityId = new System.Collections.Generic.List<RetailParty>();
            NationalityPlace = new System.Collections.Generic.List<RetailParty>();
            WorkExperiences = new System.Collections.Generic.List<WorkExperience>();
        }
    }

}
// </auto-generated>
