// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace IranMarketer.Domain.Entity
{

    [Table("Clients", Schema = "sec")]
    public class Client
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_dbo.Clients", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; }

        [Column(@"Enabled", Order = 2, TypeName = "bit")]
        [Required]
        [Display(Name = "Enabled")]
        public bool Enabled { get; set; }

        [Column(@"ClientId", Order = 3, TypeName = "nvarchar")]
        [Required]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Client ID")]
        public string ClientId { get; set; }

        [Column(@"ClientName", Order = 4, TypeName = "nvarchar")]
        [Required]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Client name")]
        public string ClientName { get; set; }

        [Column(@"ClientUri", Order = 5, TypeName = "nvarchar")]
        [MaxLength(2000)]
        [StringLength(2000)]
        [Display(Name = "Client uri")]
        public string ClientUri { get; set; }

        [Column(@"LogoUri", Order = 6, TypeName = "nvarchar(max)")]
        [Display(Name = "Logo uri")]
        public string LogoUri { get; set; }

        [Column(@"RequireConsent", Order = 7, TypeName = "bit")]
        [Required]
        [Display(Name = "Require consent")]
        public bool RequireConsent { get; set; }

        [Column(@"AllowRememberConsent", Order = 8, TypeName = "bit")]
        [Required]
        [Display(Name = "Allow remember consent")]
        public bool AllowRememberConsent { get; set; }

        [Column(@"AllowAccessTokensViaBrowser", Order = 9, TypeName = "bit")]
        [Required]
        [Display(Name = "Allow access tokens via browser")]
        public bool AllowAccessTokensViaBrowser { get; set; }

        [Column(@"Flow", Order = 10, TypeName = "int")]
        [Required]
        [Display(Name = "Flow")]
        public int Flow { get; set; }

        [Column(@"AllowClientCredentialsOnly", Order = 11, TypeName = "bit")]
        [Required]
        [Display(Name = "Allow client credentials only")]
        public bool AllowClientCredentialsOnly { get; set; }

        [Column(@"LogoutUri", Order = 12, TypeName = "nvarchar(max)")]
        [Display(Name = "Logout uri")]
        public string LogoutUri { get; set; }

        [Column(@"LogoutSessionRequired", Order = 13, TypeName = "bit")]
        [Required]
        [Display(Name = "Logout session required")]
        public bool LogoutSessionRequired { get; set; }

        [Column(@"RequireSignOutPrompt", Order = 14, TypeName = "bit")]
        [Required]
        [Display(Name = "Require sign out prompt")]
        public bool RequireSignOutPrompt { get; set; }

        [Column(@"AllowAccessToAllScopes", Order = 15, TypeName = "bit")]
        [Required]
        [Display(Name = "Allow access to all scopes")]
        public bool AllowAccessToAllScopes { get; set; }

        [Column(@"IdentityTokenLifetime", Order = 16, TypeName = "int")]
        [Required]
        [Display(Name = "Identity token lifetime")]
        public int IdentityTokenLifetime { get; set; }

        [Column(@"AccessTokenLifetime", Order = 17, TypeName = "int")]
        [Required]
        [Display(Name = "Access token lifetime")]
        public int AccessTokenLifetime { get; set; }

        [Column(@"AuthorizationCodeLifetime", Order = 18, TypeName = "int")]
        [Required]
        [Display(Name = "Authorization code lifetime")]
        public int AuthorizationCodeLifetime { get; set; }

        [Column(@"AbsoluteRefreshTokenLifetime", Order = 19, TypeName = "int")]
        [Required]
        [Display(Name = "Absolute refresh token lifetime")]
        public int AbsoluteRefreshTokenLifetime { get; set; }

        [Column(@"SlidingRefreshTokenLifetime", Order = 20, TypeName = "int")]
        [Required]
        [Display(Name = "Sliding refresh token lifetime")]
        public int SlidingRefreshTokenLifetime { get; set; }

        [Column(@"RefreshTokenUsage", Order = 21, TypeName = "int")]
        [Required]
        [Display(Name = "Refresh token usage")]
        public int RefreshTokenUsage { get; set; }

        [Column(@"UpdateAccessTokenOnRefresh", Order = 22, TypeName = "bit")]
        [Required]
        [Display(Name = "Update access token on refresh")]
        public bool UpdateAccessTokenOnRefresh { get; set; }

        [Column(@"RefreshTokenExpiration", Order = 23, TypeName = "int")]
        [Required]
        [Display(Name = "Refresh token expiration")]
        public int RefreshTokenExpiration { get; set; }

        [Column(@"AccessTokenType", Order = 24, TypeName = "int")]
        [Required]
        [Display(Name = "Access token type")]
        public int AccessTokenType { get; set; }

        [Column(@"EnableLocalLogin", Order = 25, TypeName = "bit")]
        [Required]
        [Display(Name = "Enable local login")]
        public bool EnableLocalLogin { get; set; }

        [Column(@"IncludeJwtId", Order = 26, TypeName = "bit")]
        [Required]
        [Display(Name = "Include jwt ID")]
        public bool IncludeJwtId { get; set; }

        [Column(@"AlwaysSendClientClaims", Order = 27, TypeName = "bit")]
        [Required]
        [Display(Name = "Always send client claims")]
        public bool AlwaysSendClientClaims { get; set; }

        [Column(@"PrefixClientClaims", Order = 28, TypeName = "bit")]
        [Required]
        [Display(Name = "Prefix client claims")]
        public bool PrefixClientClaims { get; set; }

        [Column(@"AllowAccessToAllGrantTypes", Order = 29, TypeName = "bit")]
        [Required]
        [Display(Name = "Allow access to all grant types")]
        public bool AllowAccessToAllGrantTypes { get; set; }

        public virtual System.Collections.Generic.ICollection<ClientClaim> ClientClaims { get; set; }
        public virtual System.Collections.Generic.ICollection<ClientCorsOrigin> ClientCorsOrigins { get; set; }
        public virtual System.Collections.Generic.ICollection<ClientCustomGrantType> ClientCustomGrantTypes { get; set; }
        public virtual System.Collections.Generic.ICollection<ClientIdPRestriction> ClientIdPRestrictions { get; set; }
        public virtual System.Collections.Generic.ICollection<ClientPostLogoutRedirectUri> ClientPostLogoutRedirectUris { get; set; }
        public virtual System.Collections.Generic.ICollection<ClientRedirectUri> ClientRedirectUris { get; set; }
        public virtual System.Collections.Generic.ICollection<ClientScope> ClientScopes { get; set; }
        public virtual System.Collections.Generic.ICollection<ClientSecret> ClientSecrets { get; set; }

        public Client()
        {
            ClientClaims = new System.Collections.Generic.List<ClientClaim>();
            ClientCorsOrigins = new System.Collections.Generic.List<ClientCorsOrigin>();
            ClientCustomGrantTypes = new System.Collections.Generic.List<ClientCustomGrantType>();
            ClientIdPRestrictions = new System.Collections.Generic.List<ClientIdPRestriction>();
            ClientPostLogoutRedirectUris = new System.Collections.Generic.List<ClientPostLogoutRedirectUri>();
            ClientRedirectUris = new System.Collections.Generic.List<ClientRedirectUri>();
            ClientScopes = new System.Collections.Generic.List<ClientScope>();
            ClientSecrets = new System.Collections.Generic.List<ClientSecret>();
        }
    }

}
// </auto-generated>
