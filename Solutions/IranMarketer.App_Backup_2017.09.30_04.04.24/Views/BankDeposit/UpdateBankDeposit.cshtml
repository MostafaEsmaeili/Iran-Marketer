@Html.Partial("_RegisterLastVersionOfKendo")
@using Kendo.Mvc.UI
@using IranMarketer.App.Component.Model
@using IranMarketer.Domain.DTO
@using IranMarketer.Domain.DTO.Setting
@model BankDeposit
@{
    Layout = "../Shared/_Layout.cshtml";
    ViewBag.Title = "ویرایش سپرده بانکی";
}


<div class="k-rtl">
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-flat">
                <div class="panel-heading">
                    <h5 class="panel-title">ویرایش سپرده بانکی</h5>
                </div>
                <div class="panel-body">
                    <form role="form" id="form" novalidate class="form-horizontal form-validate-jquery" action="#" method="POST">
                        <div class="panel-heading">
                            <h5 class="panel-title"><a class="heading-elements-toggle"><i class="icon-more"></i></a></h5>
                            <div class="heading-elements">
                                <ul class="icons-list">
                                    <li><a data-action="collapse"></a></li>
                                    <li><a data-action="reload"></a></li>
                                    <li><a data-action="close"></a></li>
                                </ul>
                            </div>
                        </div>

                        <div class="panel-body">
                            <div class="form-group">
                                <label>بانک</label>
                                @(Html.Kendo().ComboBoxFor(x=>x.BankId)
                                      //.Name("roles")
                                      .DataTextField("Title")
                                      .DataValueField("CodeId")
                                      .HtmlAttributes(new
                                      {
                                          style = "width:400px;margin-right: 1px;",
                                          data_required_msg = " الزامی است",
                                          required = "required"
                                      })

                                      .Filter("contains")
                                      .AutoBind(true)
                                      .MinLength(3)
                                      .DataSource(
                                          source => source.Read(read => read.Action("GetBankNames", "UIComponent")
                                             
                                              ).ServerFiltering(true))
                                     
                                      )
                            </div>
                            <div class="form-group">
                                <label>نام شعبه</label>
                                @Html.TextBoxFor(x=>x.BranchName , new { @class = "form-control", requierd = "requierd" })
                            </div>

                            <div class="form-group">
                                <label>کد شعبه</label>
                                @Html.TextBoxFor(x=>x.BranchCode , new { @class = "form-control", requierd = "requierd" })
                            </div>
                            <div class="form-group">
                                <label>نوع حساب</label>
                                @Html.Kendo().DropDownListFor(x => x.AccountType
                                    ).DataTextField("Title").DataValueField("Code").Filter(FilterType.Contains).DataSource(source =>
                                    {
                                        source.Custom()
                                            .ServerFiltering(false)
                                            .ServerPaging(false)
                                            .PageSize(100)
                                            .Type("aspnetmvc-ajax")
                                            
                                            .Transport(t =>
                                            {
                                                t.Read(r =>
                                                {
                                                    r.Action("GetBankAccountTypes", "UIComponent");
                                                });
                                            });
                                    })                                </div>
                            <div class="form-group">
                                <label>شماره حساب</label>
                                @Html.TextBoxFor(x=>x.AccountNumber, new { @class = "form-control", requierd = "requierd" })
                            </div>

                            <div class="form-group">
                                <label>شبا</label>
                                @Html.TextBoxFor(x=>x.Iban, new { @class = "form-control", requierd = "requierd" })
                            </div>

                            <div class="form-group">
                                <label>نرخ سود سالانه</label>
                                @*@Html.TextBoxFor(x=>x.Interest, new { @class = "form-control",type="number" ,min="0" })*@
                                
                              
                                <input class="form-control" onkeyup="SetMoney(event,this)" type="text"  placeholder="نرخ سود" id="Interest" data-bind="value: interest" name="Interest" value="@Model.Interest">
                            </div>
                                
                            <div class="form-group">
                                <label>موعد دریافت سود</label>
                                @Html.TextBoxFor(x=>x.DayofInterestInMonth, new { @class = "form-control", type="number" ,min="0" })
                               
                            </div>
                            <div class="form-group">
                                <label> دریافت سود در آخر ماه؟</label>
                                @Html.CheckBoxFor(x=>x.IsInterestInLastDayOfMonth, new { @class = "form-control", requierd = "requierd" ,style="width:20px;" })
                               
                            </div>
                                
                            <div class="form-group">
                                <label> تاریخ آغاز دریافت سود</label>
                                @Html.Kendo().DatePicker().Name("ProfitStartDate").HtmlAttributes(new { style = "width:250px", type = "text" }).Format("yyyy/MM/dd")

                            </div>
                                

                            <div class="form-group">
                                <label>مشمول کارمزد مدیر</label>
                                @Html.CheckBoxFor(x=>x.HasManagerWage, new { @class = "form-control", requierd = "requierd" , style = "width:20px;" })
                               
                            </div>
                            <div class="form-group">
                                <label>نرخ کارمزد مدیر</label>

                                <input class="form-control"  onkeyup="SetMoney(event,this)" type="text"  placeholder="نرخ کارمزد" id="ManagerWage" data-bind="value: ManagerWage" name="ManagerWage" value="@Model.ManagerWage">
                               
                            </div>
                            <div class="form-group">
                                <label>حدکثر نرخ سود حساب مشابه</label>
                                @*@Html.TextBoxFor(x =>x.MaxProfitRateInSameType, new { @class = "form-control", type = "number", min = "0" })*@
                                <input class="form-control" onkeyup="SetMoney(event,this)" type="text"  placeholder="" id="MaxProfitRateInSameType" data-bind="value: maxprofitrateinsametype" name="MaxProfitRateInSameType" value="@Model.MaxProfitRateInSameType">
                               
                            </div>
                            <div class="form-group">
                                <label>استفاده جهت درخواست</label>
                                @Html.CheckBoxFor(x =>x.UseForRquest, new { @class = "form-control", requierd = "requierd", style = "width:20px;" })
                               
                            </div>
                            <div class="form-group">
                                <label>تاریخ افتتاح</label>
                                @Html.Kendo().DatePicker().Name("OpeningDate").HtmlAttributes(new { style = "width:250px", type = "text" }).Format("yyyy/MM/dd")

                            </div>
                                
                            <div class="form-group">
                                <label>تاریخ انقضا</label>
                                @Html.Kendo().DatePicker().Name("EndDate").HtmlAttributes(new { style = "width:250px", type = "text" }).Format("yyyy/MM/dd")

                            </div>
                            <div class="form-group">
                                <label>فعال؟</label>
                                @Html.EnumDropDownListFor(model => model.State)
                            </div>

                            <div class="text-right">
                                <button type="button" id="saveBankDeposit" class="btn btn-primary legitRipple">ذخیره <i class="icon-arrow-left13 position-right"></i></button>
                            </div>
                        </div>
                    </form>
              


                </div>
            </div>
        </div>
    </div>
</div>
<style type="text/css">
    .form-horizontal .form-group {
        margin-right: 0 !important;
        margin-left: 0 !important;
    }

    .form-group-material > .control-label {
        opacity: 1 !important;
        filter: alpha(opacity=0);
    }
</style>
<script type="text/javascript" src="~/assets/js/pages/form_validation.js"></script>
<script type="text/javascript" src="~/assets/js/plugins/forms/inputs/formatter.min.js"></script>
<script>
    $("#saveBankDeposit").click(function() {

        if (!$("#form").valid()) {
            return;
        } else {


           
            var data = {
            "Id":@Model.Id,
                "AccountNumber": $('#AccountNumber').val(),
                "AccountTypeEnum": $('#AccountType').data('kendoDropDownList').dataItem().Code,
                "AccountTypeName": $('#AccountType').data('kendoDropDownList').dataItem().Title,
                "Iban": $('#Iban').val(),
                "UseForRquest": $('#UseForRquest').prop('checked'),
                "OpeningDate": $('#OpeningDate').val(),
                "EndDate": $('#EndDate').val(),
                "AccountCode": null,
                "BankId": $('#BankId').data('kendoComboBox').dataItem().CodeId,
                "BranchCode": $('#BranchCode').val(),
                "Interest": SetValueFloatNumber($('#Interest').val()),
                "ManagerWage": SetValueFloatNumber($('#ManagerWage').val()),
                "HasManagerWage": $('#HasManagerWage').prop('checked'),
                "BranchName": $('#BranchName').val(),
                "State": $('#State').val(),
                "BankTitle": $('#BankId').data('kendoComboBox').dataItem().Title,
                "BankTitleEn": $('#BankId').data('kendoComboBox').dataItem().TitleEn,
                "ProfitStartDate": $('#ProfitStartDate').val(),
                "MaxProfitRateInSameType": SetValueFloatNumber($('#MaxProfitRateInSameType').val()),
                "DayofInterestInMonth":$('#DayofInterestInMonth').val(),
                "IsInterestInLastDayOfMonth": $('#IsInterestInLastDayOfMonth').prop('checked')
            };
            $.ajax({
                url: '@Url.Action("UpdateAccount", "BankDeposit")',
                type: "POST",
                dataType: "json",
                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                401: function() {
                    var url = '@Url.Action("Login", "Account")';
                    window.location.href = url;
                },
                error: function(response) {

                    showNotification(response.Message, 'e');
                },

                success: function(response) {

                    if (response != null && response.BRuleCode == '1000') {
                        showNotification(response.Message, 's');
                        $(':input', '#form')
                            .not(':button, :submit, :reset, :hidden')
                            .val('')
                            .removeAttr('checked')
                            .removeAttr('selected');
                        
                    } else {
                        showNotification(response.Message, 'e');
                    }
                }
            });
        }
    });
    $(document).ready(function () {
        $('#Iban').formatter({
            pattern: 'IR{{999999999999999999999999}}'
        });
        $('.mask').trigger('input');

    });
</script>
