@Html.Partial("_RegisterLastVersionOfKendo")
@using Kendo.Mvc.UI
@using Pikad.Framework.Infra.Utility
@using IranMarketer.Domain.DTO
@using IranMarketer.Domain.Entity

@{
    ViewBag.Title = "دفتر حساب";
}

<div id="filterPanel" class="panel panel-flat">
    <div class="panel-heading">
        <h5 class="panel-title">فیلتر جستجو</h5>
        <div class="heading-elements">
            <ul class="icons-list">
                <li><a data-action="collapse"></a></li>

            </ul>
        </div>
    </div>

    <div class="panel-body">
        <div class="form-group col-md-6">
            <div class="col-xs-2 col-sm-3"><label>سال مالی</label></div>

            @(Html.Kendo().DropDownList().Name("FiscalYearId").HtmlAttributes(new { @class = "form-control k-rtl" })
                  .DataTextField("Title")
                  .Filter(FilterType.Contains)
                  .DataValueField("Id")
                  .SelectedIndex(0)
                  .Events(x =>
                  {
                      x.Change("onfiscalYearChange");
                      x.DataBound("onfiscalYearChange");

                  })
                  .AutoBind(true)
                  .DataSource(source => source.Read(read => read.Action("GetFiscalYears", "UIComponent")).ServerFiltering(false)))

        </div>
        <div class="form-group col-md-6">
            <div class="col-xs-2 col-sm-3"><label>شعبه</label></div>
            @(Html.Kendo().ComboBox().Name("BranchId").HtmlAttributes(new { @class = "form-control k-rtl" })
                  .DataTextField("BranchTitle")
                  .Filter(FilterType.Contains)
                  .DataValueField("BranchValue")
                  .AutoBind(true)
                  .Value("همه")
                  .DataSource(source => source.Read(read => read.Action("GetBranchesDropDownListById", "UIComponent", new { addAll = true }).Data("onadditionalBranch")).ServerFiltering(false)))
        </div>
        <div class="form-group col-md-6">
            <div class="col-xs-2 col-sm-3"><label>حساب معین</label></div>
            @(Html.Kendo().ComboBox().Name("SubsidiaryLedgerId").HtmlAttributes(new { @class = "form-control k-rtl", style="width:70%"})
                  .DataTextField("FullTitle")
                  .Filter(FilterType.Contains)
                  .DataValueField("Id")


                  .SelectedIndex(0)
                  .Events(x =>
                  {

                  })
                  .AutoBind(true)
                  .DataSource(source => source.Read(read => read.Action("GetSubsidiaryLedgersAutoComplete", "Ledgers")).ServerFiltering(true)))




        </div>
        <div class="form-group col-md-6">
            <div class="col-xs-2 col-sm-3"><label>حساب تفصیلی</label></div>
            @(Html.Kendo().AutoComplete().Name("DetailLedgersId").HtmlAttributes(new { @class = " k-rtl", required = "required", style = "width:70%;font-size:12px;" })
                  .DataTextField("FullTitle")

                  .Filter(FilterType.Contains)
                  .MinLength(3).Animation(true)
                  .Events(x =>
                  {

                  })
                  .DataSource(source => source.Read(read => read.Action("GetDetailLedgersAutoComplete", "Ledgers").Data("onDetailLedgersData")).ServerFiltering(true)))



        </div>
        <div class="row" style="clear:both;">
            <div class="col-md-6">
                <div class="form-group">
                    <label>از تاریخ</label>
                    @Html.Kendo().DatePicker().Name("StartDate").HtmlAttributes(new { style = "width:250px", type = "text" }).Format("yyyy/MM/dd")

                </div>
            </div>
            <div class="col-md-6">

                <div class="form-group">
                    <label>تا تاریخ</label>
                    @Html.Kendo().DatePicker().Name("EndDate").HtmlAttributes(new { style = "width:250px", type = "text" }).Format("yyyy/MM/dd")

                </div>
            </div>

        </div>
        <div class="row">

            <div class="col-md-6">
                <div class="form-group">
                    <label>شماره سند: از</label>
                    <input class="form-control" type="number" min="0" id="FromVoucherNumber" />

                </div>
            </div>
            <div class="col-md-6">

                <div class="form-group">
                    <label>تا  </label>
                    <input class="form-control" type="number" min="0" id="ToVoucherNumber" />

                </div>
            </div>

        </div>
        <div class="row">

            <div class="col-md-4">
                <div class="form-group">
                    <label>بدون سند افتتاحیه</label>
                    <input type="checkbox" id="OpeningAccounts" value="360" />

                </div>
            </div>
            <div class="col-md-4">

                <div class="form-group">
                    <label>بدون سند اختتامیه </label>
                    <input type="checkbox" id="ClosingAccounts" value="370" />

                </div>
            </div>
            <div class="col-md-4">

                <div class="form-group">
                    <label>بدون سند بستن عملکرد </label>
                    <input type="checkbox" id="OperationalAccountsClosing" value="350" />


                </div>
            </div>

        </div>
        <div class="text-right">
            <button type="button" id="search" class="btn btn-primary">جست و جو <i class="icon-arrow-left13 position-right"></i></button>
        </div>
    </div>
</div>
<div class="panel panel-body" style="min-height: 670px">
    <div class="k-rtl">

        @(Html.Kendo().Grid<AccountBook>()
              .Name("grid")
              .Columns(column =>
              {
                  //column.Bound(x => x.AccountBookRow.Row).Title("ردیف").Width(70);
                  column.Bound(x => x.AccountBookRow.VoucherDateJalali).Title("تاریخ").Width(90).ClientFooterTemplate("جمع");
                  column.Bound(x => x.AccountBookRow.Id).ClientTemplate("<a href='/Voucher/ViewVoucherDetails?vid=${AccountBookRow.Id}&fid=${AccountBookRow.FiscalYearId}'>${AccountBookRow.Id}</a>").Title("شماره سیستمی").Width(80);
                  column.Bound(x => x.AccountBookRow.Description).Title("شرح").Width(470);
                  column.Bound(x => x.AccountBookRow.Debit).Title("بدهکار").Width(100).ClientTemplate("#=SetColor(AccountBookRow.Debit)#").ClientFooterTemplate(" #=SetColor(sum)#");
                  column.Bound(x => x.AccountBookRow.Credit).Title("بستانکار").Width(100).ClientTemplate("#=SetColor(AccountBookRow.Credit)#").ClientFooterTemplate(" #=SetColor(sum)#");
                  column.Bound(x => x.AccountBookRow.Remain).Title("مانده").Width(100).ClientTemplate("#=SetColor2(AccountBookRow.Remain)#");

              })
              .ToolBar(toolBar =>
              {
                  toolBar.Excel().Text("Excel");
              })
              .Events(e =>
              {
                  e.DataBound("onGridBound");

              })
              .Excel(excel => excel
                  .FileName("AccountBooks.xlsx")
                  .Filterable(true)
                  .AllPages(true)
                  .ForceProxy(true)
                  .AllPages(true)
                  .ProxyURL(Url.Action("CustomExcelReport", "Ledgers"))
              )
              .Sortable(sortable => sortable.AllowUnsort(false))

              .Pageable(pager => pager
                  .Input(true)
                  .Numeric(true)
                  .Info(true)
                  .PreviousNext(true)
                  .Refresh(true)
                  .PageSizes(new[] { 51, 101, 151, 201, 501 }))

              .AllowCopy(true)
              .Selectable()
              .Scrollable()
              .AutoBind(false)
              .HtmlAttributes(new { style = "height:590px;" })
              .DataSource(dataSource =>
                  dataSource.Custom()
                      .Type("aspnetmvc-ajax")
                      .PageSize(100)
                      .Aggregates(x =>
                      {
                          x.Add(p => p.AccountBookRow.Debit).Sum();
                          x.Add(p => p.AccountBookRow.Credit).Sum();
                          //x.Add(p => p.AccountBookRow.Remain).Sum();
                      })
                      .ServerPaging(true)
                      .ServerSorting(true)
                      .ServerFiltering(true)
                      .Transport(transport => transport
                          .Read(read => read.Action("GetAccountBookReport", "Ledgers").Data("filterData").Type(HttpVerbs.Post))
                      )
                      .Schema(s => s.Data("Result").Total("TotalRecords"))
                      .PageSize(50)
                      .ServerPaging(true)
                      .ServerSorting(true)
                      .ServerFiltering(true)
              )

              .Resizable(resize => resize.Columns(true))
              .Reorderable(reorder => reorder.Columns(true)))

    </div>
</div>
<script>
    function onfiscalYearChange() {
        var dataItem = $("#FiscalYearId").data("kendoDropDownList").dataItem();
        if (dataItem != null) {
            $("#EndDate").val(dataItem.EndDateJalali);
            $("#StartDate").val(dataItem.StartDateJalali);
        }
    }

    function onadditionalBranch() {
        return {
            text: $('[name="BranchId_input"]').val()
        };
    }

    function onDetailLedgersData(e) {

        var subsidariCode = $("#SubsidiaryLedgerId").data("kendoComboBox").dataItem();
        var text = $("#DetailLedgersId").data("kendoAutoComplete").value();
        if (subsidariCode != null)
            return { text: text, accountClassId: subsidariCode.ClassId }
        else return { text: text, accountClassId: 0 }
    }

    function filterData() {

        var exceptionList = [];
        if ($("#OperationalAccountsClosing").prop('checked') === true) {

            exceptionList.push($("#OperationalAccountsClosing").val());
        }
        if ($("#ClosingAccounts").prop('checked') === true) {

            exceptionList.push($("#ClosingAccounts").val());
        }
        if ($("#OpeningAccounts").prop('checked') === true) {

            exceptionList.push($("#OpeningAccounts").val());
        }

        var detailsCode = $("#DetailLedgersId").data("kendoAutoComplete").dataItem();
        var subsidariCode = $("#SubsidiaryLedgerId").data("kendoComboBox").dataItem();
        var data = {
            BranchId: $("#BranchId").val(),
            DetailLedgersId: detailsCode != undefined ? detailsCode.Id : 0,
            EndDate: $("#EndDate").val(),
            FiscalYearId: $("#FiscalYearId").val(),
            FromVoucherId: $("#FromVoucherNumber").val(),
            StartDate: $("#StartDate").val(),
            SubsidiaryLedgerId: subsidariCode != undefined ? subsidariCode.Id :"",
            ToVoucherId: $("#ToVoucherNumber").val(),
            VouhcerCategoryExcetionListCode: exceptionList
        }
        if (!$('#filterPanel').hasClass('panel-collapsed'))
            $('#filterPanel [data-action=collapse]').click();
        return { model: data };

    }
    function SetColor(e) {
        if (e < 0)
            return kendo.toString(Math.abs(e), "#,##0;#,##0");
        //return "<font color=\"red\">" + kendo.toString(e, "0:#,##0;(#,##0)")+"</font>";
        else if (e > 0)
            return kendo.toString(e, "#,##0;#,##0");
        else return "0";

    }

    function SetColor2(e) {
        if (e < 0)
            //return kendo.toString(Math.abs(e), "#,##0;#,##0");
            return "<font color=\"red\">" + kendo.toString(e, "0:#,##0;(#,##0)") + "</font>";
        else if (e > 0)
            return kendo.toString(e, "#,##0;#,##0");
        else return "0";

    }

    function onGridBound(e) {
        var grid = $("#grid").data("kendoGrid");
        var gridData = grid.dataSource.view();
        var tr = grid.table.find("tr")[0];
        $(tr).css('background-color', '#AED581');
        var items = $("#grid").data("kendoGrid").dataItems();

        if (items.length > 1) {
            var remain = items[items.length - 1].AccountBookRow.Remain;
            var footer = $(".k-footer-template");
            var td = $(footer).find('td:last-child');
            $(td).html(SetColor2(remain));
        }
    }

    $("#search").click(function () {

        $("#grid").data("kendoGrid").dataSource.read();

    });
</script>